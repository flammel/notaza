{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./src/MarkdownRenderer.ts","webpack:///./src/Page.ts","webpack:///./src/Api.ts","webpack:///./src/util.ts","webpack:///./src/search.ts","webpack:///./src/View.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_hasOwnProperty","has","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","Token","type","tag","nesting","this","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","length","attrPush","attrData","push","attrSet","idx","attrGet","attrJoin","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","enableOnly","disable","getRules","chainName","encode","decode","format","parse","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","MarkdownIt","presetName","inline","core","renderer","linkify","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","filter","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","nextCode","cache","defaultChars","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","split","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","join","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","md","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","eMarks","escapedSplit","escapes","backTicked","lastBackTick","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","tShift","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","wasOutdented","oldLineMax","bsCount","parentType","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","html","StateBlock","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","arr","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","root","nodeType","freeGlobal","global","window","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","webpackPolyfill","deprecate","paths","g","Function","e","existingClasses","startsWith","endsWith","undefined","hashtags","regex","blockToken","inLink","newChildren","entries","matches","tagName","leadingTextToken","hashtagToken","followingTextToken","hashtag","wikilinks","wikilinkToken","wikilink","mdIt","Map","page","cached","body","rendered","Page","filename","frontMatter","bodyParts","parseFrontMatter","baseUrl","fetch","then","json","assumed","Promise","resolve","data","decodeResponse","apiPages","apiPage","notUndefined","x","compareResults","a","b","titleMatch","aIsDate","bIsDate","localeCompare","$container","markdownRenderer","pages","query","$content","document","createElement","classList","$results","$app","appendChild","renderSidebar","innerHTML","renderPage","renderSearchResults","markSidebarItemActive","$result","$link","querySelector","getAttribute","contains","remove","$sidebar","$form","addEventListener","event","preventDefault","$search","setAttribute","setQuery","find","$page","firstChild","HTMLHeadingElement","$title","insertBefore","renderBacklinks","createDocumentFragment","bodyMatches","includes","searchInPage","getSearchResults","$matches","$match","$fragment","$headline","innerText","$list","other","$other","apiUrl","localStorage","getItem","$input","$button","setItem","api","view","getElementById","location","loadPages","setPages","setUrl"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n          // en-dash\n          .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n          .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open &&\n          opener.end < 0 &&\n          opener.level === closer.level) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","import * as MarkdownIt from 'markdown-it';\nimport * as Token from 'markdown-it/lib/token';\nimport StateCore from 'markdown-it/lib/rules_core/state_core';\nimport { Page } from './Page';\n\nconst links: MarkdownIt.PluginSimple = (md): void => {\n    md.core.ruler.push('notaza_links', (state): boolean => {\n        const fn = (token: Token): void => {\n            if (token.children !== null) {\n                token.children.map(fn);\n            }\n            if (token.type === 'link_open') {\n                const href = token.attrGet('href');\n                const existingClasses = token.attrGet('class') || '';\n\n                if (href?.startsWith('./') && href.endsWith('.md')) {\n                    token.attrSet('class', existingClasses + ' internal');\n                    token.attrSet('href', href !== undefined ? '/#/' + href.substring(2) : '');\n                } else {\n                    token.attrSet('target', '_blank');\n                    token.attrSet('rel', 'noreferrer noopener');\n                    token.attrSet('class', existingClasses + ' external');\n                }\n            }\n        };\n        state.tokens.map(fn);\n        return true;\n    });\n};\n\n// https://github.com/svbergerem/markdown-it-hashtag/blob/master/index.js\nconst hashtags: MarkdownIt.PluginSimple = (md): void => {\n    const regex = new RegExp(/(^|\\s)#([\\w-]+)/g);\n    md.core.ruler.after('inline', 'hashtag', (state: StateCore): boolean => {\n        for (const blockToken of state.tokens) {\n            if (blockToken.type === 'inline') {\n                let inLink = false;\n                const newChildren = blockToken.children;\n                for (const [index, token] of (blockToken.children || []).entries()) {\n                    if (token.type === 'link_open') {\n                        inLink = true;\n                        continue;\n                    }\n                    if (token.type === 'link_close') {\n                        inLink = false;\n                        continue;\n                    }\n                    if (inLink || token.type === 'code_inline') {\n                        continue;\n                    }\n                    const nodes = [];\n                    let text = token.content;\n                    const matches = text.match(regex);\n                    if (matches !== null) {\n                        for (const match of matches) {\n                            const tagName = match.split('#', 2)[1];\n                            const pos = text.indexOf('#' + tagName, text.indexOf(match));\n                            if (pos > 0) {\n                                const leadingTextToken = new Token('text', '', 0);\n                                leadingTextToken.content = text.slice(0, pos);\n                                leadingTextToken.level = token.level;\n                                nodes.push(leadingTextToken);\n                            }\n                            const hashtagToken = new Token('hashtag', '', 0);\n                            hashtagToken.content = tagName;\n                            hashtagToken.level = token.level;\n                            nodes.push(hashtagToken);\n                            text = text.slice(pos + 1 + tagName.length);\n                        }\n                        if (text.length > 0) {\n                            const followingTextToken = new Token('text', '', 0);\n                            followingTextToken.content = text;\n                            followingTextToken.level = token.level;\n                            nodes.push(followingTextToken);\n                        }\n                        newChildren?.splice(index, 1, ...nodes);\n                    }\n                }\n                blockToken.children = newChildren;\n            }\n        }\n        return true;\n    });\n    md.renderer.rules.hashtag = (tokens, index): string =>\n        `<a class=\"internal\" href=\"/#/${tokens[index].content}.md\">#${tokens[index].content}</a>`;\n};\n\nconst wikilinks: MarkdownIt.PluginSimple = (md): void => {\n    const regex = new RegExp(/(^|\\s)\\[\\[([\\w -_\\/]+)\\]\\]($|\\s|.|,|-|\\/|:)/g);\n    md.core.ruler.after('inline', 'wikilink', (state: StateCore): boolean => {\n        for (const blockToken of state.tokens) {\n            if (blockToken.type === 'inline') {\n                let inLink = false;\n                const newChildren = blockToken.children;\n                for (const [index, token] of (blockToken.children || []).entries()) {\n                    if (token.type === 'link_open') {\n                        inLink = true;\n                        continue;\n                    }\n                    if (token.type === 'link_close') {\n                        inLink = false;\n                        continue;\n                    }\n                    if (inLink || token.type === 'code_inline') {\n                        continue;\n                    }\n                    const nodes = [];\n                    let text = token.content;\n                    const matches = text.match(regex);\n                    if (matches !== null) {\n                        for (const match of matches) {\n                            const title = match.split('[[', 2)[1].split(']]', 2)[0];\n                            const pos = text.indexOf('[[' + title + ']]', text.indexOf(match));\n                            if (pos > 0) {\n                                const leadingTextToken = new Token('text', '', 0);\n                                leadingTextToken.content = text.slice(0, pos);\n                                leadingTextToken.level = token.level;\n                                nodes.push(leadingTextToken);\n                            }\n                            const wikilinkToken = new Token('wikilink', '', 0);\n                            wikilinkToken.content = title;\n                            wikilinkToken.level = token.level;\n                            nodes.push(wikilinkToken);\n                            text = text.slice(pos + 2 + title.length + 2);\n                        }\n                        if (text.length > 0) {\n                            const followingTextToken = new Token('text', '', 0);\n                            followingTextToken.content = text;\n                            followingTextToken.level = token.level;\n                            nodes.push(followingTextToken);\n                        }\n                        newChildren?.splice(index, 1, ...nodes);\n                    }\n                }\n                blockToken.children = newChildren;\n            }\n        }\n        return true;\n    });\n    md.renderer.rules.wikilink = (tokens, index): string =>\n        `<a class=\"internal\" href=\"/#/${tokens[index].content.toLowerCase().replace(' ', '-')}.md\">${\n            tokens[index].content\n        }</a>`;\n};\n\nexport class MarkdownRenderer {\n    private readonly mdIt = MarkdownIt({ html: true, linkify: true }).use(links).use(hashtags).use(wikilinks);\n    private readonly cache = new Map<string, string>();\n\n    public render(page: Page): string {\n        const cached = this.cache.get(page.body);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const rendered = this.mdIt.render(page.body);\n        this.cache.set(page.body, rendered);\n        return rendered;\n    }\n}\n","type FrontMatter = Map<string, string>;\n\nfunction parseFrontMatter(frontMatter: string): FrontMatter {\n    return new Map(\n        frontMatter\n            .split('\\n')\n            .map((line) => line.split(':'))\n            .map(([key, ...value]) => [key, value.join(':').trim()]),\n    );\n}\n\nexport class Page {\n    public readonly filename: string;\n    public readonly frontMatter: FrontMatter;\n    public readonly body: string;\n\n    public constructor(filename: string, content: string) {\n        this.filename = filename;\n        const parts = content.split('\\n---\\n');\n        if (parts.length < 2 || !parts[0].startsWith('---\\n')) {\n            this.frontMatter = new Map();\n            this.body = content;\n        } else {\n            const [frontMatter, ...bodyParts] = parts;\n            this.frontMatter = parseFrontMatter(frontMatter.substring(4));\n            this.body = bodyParts.join('\\n---\\n');\n        }\n    }\n\n    public get title(): string {\n        return this.frontMatter.get('title') || this.filename;\n    }\n}\n","import { Page } from './Page';\ninterface ApiPage {\n    filename: string;\n    content: string;\n}\n\nfunction decodeResponse(json: unknown): Promise<ApiPage[]> {\n    const assumed = json as { data: ApiPage[] };\n    return Promise.resolve(assumed.data);\n}\n\nexport class Api {\n    public constructor(private readonly baseUrl: string) {}\n\n    public loadPages(): Promise<Page[]> {\n        return fetch(this.baseUrl)\n            .then((r) => r.json())\n            .then((json) => decodeResponse(json))\n            .then((apiPages) => apiPages.map((apiPage) => new Page(apiPage.filename, apiPage.content)));\n    }\n}\n","function padLeadingZero(x: number): string {\n    return x.toString().padStart(2, '0');\n}\n\nexport function notUndefined<T>(x: T | undefined): x is T {\n    return x !== undefined;\n}\n\n// https://fettblog.eu/typescript-hasownproperty/\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return obj.hasOwnProperty(prop);\n}\n\nexport function dateToString(date: Date): string {\n    return date.getFullYear() + '-' + padLeadingZero(date.getMonth() + 1) + '-' + padLeadingZero(date.getDate());\n}\n\n/**\n * https://stackoverflow.com/a/1349426\n */\nexport function makeId(): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < 16; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport function assertNever(x: never): never {\n    throw new Error('Unexpected object: ' + x);\n}\n","import { Page } from './Page';\nimport { notUndefined } from './util';\n\ninterface SearchResult {\n    page: Page;\n    matches: string[];\n    titleMatch: boolean;\n}\n\nfunction searchInPage(page: Page, query: string): SearchResult | undefined {\n    if (query === '') {\n        return {\n            page,\n            matches: [],\n            titleMatch: false,\n        };\n    }\n    const bodyMatches = page.body.toLowerCase().split(query.toLowerCase());\n    const titleMatch = page.title.toLowerCase().includes(query.toLowerCase());\n    if (bodyMatches.length > 1 || titleMatch) {\n        return {\n            page,\n            matches: [],\n            titleMatch,\n        };\n    }\n}\n\nfunction compareResults(a: SearchResult, b: SearchResult): number {\n    if (a.titleMatch && !b.titleMatch) {\n        return -1;\n    }\n    if (!a.titleMatch && b.titleMatch) {\n        return 1;\n    }\n    if (a.matches.length > 0 || b.matches.length > 0) {\n        return b.matches.length - a.matches.length;\n    }\n    const aIsDate = a.page.title.match(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/);\n    const bIsDate = b.page.title.match(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/);\n    if (aIsDate && bIsDate) {\n        return b.page.title.localeCompare(a.page.title);\n    } else if (aIsDate && !bIsDate) {\n        return -1;\n    } else if (!aIsDate && bIsDate) {\n        return 1;\n    } else {\n        return a.page.title.localeCompare(b.page.title);\n    }\n}\n\nexport function getSearchResults(pages: Page[], query: string): SearchResult[] {\n    return pages\n        .map((page) => searchInPage(page, query))\n        .filter(notUndefined)\n        .sort(compareResults);\n}\n","import { MarkdownRenderer } from './MarkdownRenderer';\nimport { Page } from './Page';\nimport { getSearchResults } from './search';\n\nexport class View {\n    private readonly $content: HTMLElement;\n    private readonly $results: HTMLElement;\n    private readonly markdownRenderer: MarkdownRenderer;\n\n    private pages: Page[] = [];\n    private url: string = '';\n    private query: string = '';\n\n    public constructor($container: HTMLElement, markdownRenderer: MarkdownRenderer, url: string) {\n        this.url = url;\n        this.markdownRenderer = markdownRenderer;\n\n        this.$content = document.createElement('div');\n        this.$content.classList.add('content');\n\n        this.$results = document.createElement('ul');\n        this.$results.classList.add('sidebar__list');\n\n        const $app = document.createElement('div');\n        $app.classList.add('app');\n        $app.appendChild(this.renderSidebar());\n        $app.appendChild(this.$content);\n\n        $container.innerHTML = '';\n        $container.appendChild($app);\n    }\n\n    public setPages(pages: Page[]): void {\n        this.pages = pages;\n        this.renderPage();\n        this.renderSearchResults();\n        this.markSidebarItemActive();\n    }\n\n    public setUrl(url: string): void {\n        this.url = url;\n        this.renderPage();\n        this.markSidebarItemActive();\n    }\n\n    public setQuery(query: string): void {\n        this.query = query;\n        this.renderSearchResults();\n    }\n\n    private markSidebarItemActive(): void {\n        for (const $result of this.$results.children) {\n            const $link = $result.querySelector('a');\n            if ($link?.getAttribute('href') === '/#/' + this.url) {\n                $link.classList.add('active');\n            } else if ($link?.classList.contains('active')) {\n                $link.classList.remove('active');\n            }\n        }\n    }\n\n    private renderSidebar(): HTMLElement {\n        const $sidebar = document.createElement('div');\n        $sidebar.classList.add('sidebar');\n\n        const $form = document.createElement('form');\n        $form.classList.add('sidebar__header');\n        $form.addEventListener('submit', (event) => event.preventDefault());\n\n        const $search = document.createElement('input');\n        $search.classList.add('sidebar__search-input');\n        $search.setAttribute('placeholder', 'Search');\n        $search.addEventListener('input', () => {\n            this.setQuery($search.value);\n        });\n\n        $form.appendChild($search);\n        $sidebar.appendChild($form);\n        $sidebar.appendChild(this.$results);\n\n        return $sidebar;\n    }\n\n    private renderPage(): void {\n        const page = this.pages.find((page) => page.filename === this.url);\n        if (page !== undefined) {\n            const $page = document.createElement('div');\n            $page.classList.add('page');\n            $page.innerHTML = this.markdownRenderer.render(page);\n            if (!($page.firstChild instanceof HTMLHeadingElement)) {\n                const $title = document.createElement('h1');\n                $title.innerHTML = page.title;\n                $page.insertBefore($title, $page.firstChild);\n            }\n            this.$content.innerHTML = '';\n            this.$content.appendChild($page);\n            this.$content.appendChild(this.renderBacklinks(page));\n\n            document.title = 'KB | ' + page.title;\n        } else {\n            this.$content.innerHTML = '';\n        }\n    }\n\n    private renderSearchResults(): void {\n        const $container = document.createDocumentFragment();\n        for (const result of getSearchResults(this.pages, this.query)) {\n            const $result = document.createElement('li');\n            $result.classList.add('sidebar__result');\n\n            const $link = document.createElement('a');\n            $link.setAttribute('href', '/#/' + result.page.filename);\n            $link.innerHTML = result.page.title;\n\n            const $matches = document.createElement('ul');\n            for (const match of result.matches) {\n                const $match = document.createElement('li');\n                $match.classList.add('search-result__match');\n                $match.innerHTML = match;\n                $matches.appendChild($match);\n            }\n\n            $result.appendChild($link);\n            $result.appendChild($matches);\n            $container.appendChild($result);\n        }\n        this.$results.innerHTML = '';\n        this.$results.appendChild($container);\n    }\n\n    private renderBacklinks(page: Page): Node {\n        const $fragment = document.createDocumentFragment();\n\n        const $headline = document.createElement('h2');\n        $headline.innerText = 'References';\n\n        const $list = document.createElement('ul');\n\n        for (const other of this.pages) {\n            if (other.filename !== page.filename) {\n                if (\n                    other.body.includes('](./' + page.filename + ')') ||\n                    other.body.includes('](./' + page.filename.slice(0, -3) + ')') ||\n                    other.body.includes('#' + page.filename.slice(0, -3)) ||\n                    other.body.includes('[[' + page.title + ']]')\n                ) {\n                    const $other = document.createElement('li');\n                    const $link = document.createElement('a');\n                    $link.innerText = other.title;\n                    $link.setAttribute('href', '/#/' + other.filename);\n                    $other.appendChild($link);\n                    $list.appendChild($other);\n                }\n            }\n        }\n\n        $fragment.appendChild($headline);\n        $fragment.appendChild($list);\n\n        return $fragment;\n    }\n}\n","import { MarkdownRenderer } from './MarkdownRenderer';\nimport { Api } from './Api';\nimport { View } from './View';\n\nimport './index.scss';\n\nconst apiUrl = window.localStorage.getItem('apiUri');\n\nif (apiUrl === null) {\n    const $form = document.createElement('form');\n    const $input = document.createElement('input');\n    const $button = document.createElement('button');\n\n    $form.addEventListener('submit', () => {\n        window.localStorage.setItem('apiUrl', $input.value);\n    });\n\n    $form.appendChild($input);\n    $form.appendChild($button);\n    document.body.appendChild($form);\n} else {\n    const api = new Api(apiUrl);\n    const view = new View(\n        document.getElementById('container') as HTMLElement,\n        new MarkdownRenderer(),\n        window.location.hash.substring(2),\n    );\n\n    api.loadPages().then((pages) => {\n        view.setPages(pages);\n    });\n\n    window.addEventListener('hashchange', () => {\n        view.setUrl(window.location.hash.substring(2));\n    });\n}\n"],"sourceRoot":""}