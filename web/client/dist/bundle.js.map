{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Model/Block.ts","webpack:///./src/Model/Page.ts","webpack:///./src/Model/Wiki.ts","webpack:///./src/Markdown.ts","webpack:///./src/Navigation.ts","webpack:///./src/Upload.ts","webpack:///./src/html.ts","webpack:///./src/View/Icons.ts","webpack:///./src/View/Sidebar.ts","webpack:///./src/util.ts","webpack:///./src/View/PageHeader.ts","webpack:///./src/View/PageView.ts","webpack:///./src/View/Editor.ts","webpack:///./src/index.ts","webpack:///./src/View/App.ts","webpack:///./src/View/Notifications.ts","webpack:///./src/caret.ts","webpack:///./src/Api.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","Block","page","content","level","_content","this","trim","id","Date","now","Math","round","random","toString","onBlockChange","links","matches","matchAll","linkText","to","from","getUri","block","parents","parent","unshift","current","prev","children","next","before","after","newBlock","remove","change","oldLevel","min","max","checked","startsWith","substring","wiki","uri","title","exists","saving","undoStack","redoStack","changeListeners","decodeURI","firstBlock","parseContentToBlocks","toMarkdown","markdown","splitMarkdown","lines","split","replace","join","newTitle","scheduleChangeListenerCall","isDate","getAllLinksTo","query","score","toLowerCase","indexOf","blocksInOrder","idx","match","flatMap","internalLinks","result","cur","getTitle","repeat","map","line","date","setDate","getDate","getPage","toISOString","callChangeListeners","listener","splice","pushUnique","pop","setMarkdown","stack","item","pageContent","regex","RegExp","lastBlock","indentations","finalize","indentation","substr","PageList","getPages","filter","pages","Map","linksByFrom","linksByTo","pageList","onChangeListeners","fromMarkdown","set","storeAllLinksOnPage","values","delete","removeAllStoredLinksFromPage","callOnChange","link","targetPage","storedFrom","storedTo","x","has","singleTokens","_","takeUntil","until","endIdx","buildLinkTag","attributes","renderMarkdown","peeked","peekedBelow","singleTokenTags","token","renderInline","Markdown","mathRenderFunction","raw","then","renderToString","element","getElementsByClassName","innerHTML","quote","html","titleEndIdx","targetEndIdx","math","url","stackItem","Navigation","changePage","newPage","history","pushState","Upload","api","allowedMimeTypes","dataTransfer","callback","items","kind","includes","file","getAsFile","uploadFile","uploadedFile","filename","htmlBuilder","tag","internalElement","classNames","classList","add","child","text","innerText","addEventListener","ev","fn","dataset","build","internalBuilder","fragmentOf","fragment","createDocumentFragment","replaceContent","replacement","internalLinkBuilder","navigation","href","preventDefault","goToUri","chevronLeft","chevronRight","dotsVertical","home","comparePagesWithMatches","a","b","localeCompare","Sidebar","initialPages","listElement","selected","localStorage","getItem","inputElement","search","withSelected","select","initialValue","firstChild","firstElementChild","HTMLAnchorElement","click","nextSibling","nextElementSibling","HTMLLIElement","prevSibling","previousElementSibling","makeInputElement","el","newQuery","setItem","results","sort","withChildren","createTextNode","makeResultItemElement","createOffer","addClass","makeFallbackResult","update","newPages","addChangeListener","activeElement","body","focus","Icons","dateToString","getFullYear","getMonth","PageTitle","apply","ctrlKey","blur","_ev","setTitle","DateNavigation","prevDate","nextDate","PageActions","props","isOpen","container","openButton","actionList","deletePage","setMode","PageHeader","makeBlock","registerBlockElement","onBlockClick","isEmpty","render","renderBlockMode","getBacklinks","pageBlock","blocks","makeBacklink","PageView","initialState","rootElement","oldState","blockModeProps","newState","textarea","renderRawMode","scrollTo","Editor","upload","blockElementMap","renderBlock","editor","mirror","editing","autoResize","style","height","scrollHeight","stopEditing","editorValue","startEditing","position","setSelectionRange","cursorPosition","selectionStart","selectionEnd","navigate","width","clientWidth","oneLineHeight","isInFirstLine","fullHeight","isInLastLine","shiftKey","prevBlock","nextPosition","removedBlock","mergeWithPrev","mergeWithNext","newLevel","changeLevel","newElement","oldElement","insertAdjacentElement","autoComplete","confirm","onClose","selectedElement","valueOnKeydown","parentElement","removeChild","filterPagesByTitle","makeAutoComplete","clipboardData","HTMLElement","closest","isEditing","getElementById","notifications","notification","Notifications","showPage","getPageList","pageViewProps","success","catch","pageView","additionalPagesView","AdditionalPagesView","sidebar","HTMLInputElement","setCheckbox","stopPropagation","pos","y","caretPositionFromPoint","offsetNode","offset","caretRangeFromPoint","range","startContainer","startOffset","caretNodeAndOffset","clientX","clientY","node","clickedText","textContent","positions","currentIndex","previousSibling","getAttribute","minOffset","caretPosition","pagesWithChangeListeners","Set","currentPage","savePage","location","pathname","additionalPages","onpopstate","state","undo","redo","contains","loadPages","addPage","onChange","App","fetch","json","method","headers","JSON","stringify","res","formData","FormData","append","navigator","serviceWorker","register"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GAKAK,EAAI,EAAGC,EAAW,GACpCD,EAAIF,EAASI,OAAQF,IACzBH,EAAUC,EAASE,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBV,IAAYU,EAAgBV,IACpFI,EAASO,KAAKD,EAAgBV,GAAS,IAExCU,EAAgBV,GAAW,EAE5B,IAAID,KAAYG,EACZI,OAAOC,UAAUC,eAAeC,KAAKP,EAAaH,KACpDa,EAAQb,GAAYG,EAAYH,IAKlC,IAFGc,GAAqBA,EAAoBf,GAEtCM,EAASC,QACdD,EAASU,OAATV,GAOF,IAAIW,EAAmB,GAKnBL,EAAkB,CACrBM,EAAG,GAWJ,SAASC,EAAoBlB,GAG5B,GAAGgB,EAAiBhB,GACnB,OAAOgB,EAAiBhB,GAAUmB,QAGnC,IAAIC,EAASJ,EAAiBhB,GAAY,CACzCI,EAAGJ,EACHqB,GAAG,EACHF,QAAS,IAUV,OANAN,EAAQb,GAAUU,KAAKU,EAAOD,QAASC,EAAQA,EAAOD,QAASD,GAG/DE,EAAOC,GAAI,EAGJD,EAAOD,QAKfD,EAAoBI,EAAI,SAAuBrB,GAC9C,IAAIsB,EAAW,GAKXC,EAAqBb,EAAgBV,GACzC,GAA0B,IAAvBuB,EAGF,GAAGA,EACFD,EAASX,KAAKY,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBb,EAAgBV,GAAW,CAAC0B,EAASC,MAE3DL,EAASX,KAAKY,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbhB,EAAoBiB,IACvBL,EAAOM,aAAa,QAASlB,EAAoBiB,IAElDL,EAAOO,IA1DV,SAAwBpC,GACvB,OAAOiB,EAAoBoB,EAAI,IAAM,GAAGrC,IAAUA,GAAW,aAyD9CsC,CAAetC,GAG5B,IAAIuC,EAAQ,IAAIC,MAChBZ,EAAmB,SAAUa,GAE5BZ,EAAOa,QAAUb,EAAOc,OAAS,KACjCC,aAAaX,GACb,IAAIY,EAAQnC,EAAgBV,GAC5B,GAAa,IAAV6C,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOb,IACpDG,EAAMW,QAAU,iBAAmBlD,EAAU,cAAgB8C,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEV7B,EAAgBV,QAAWqD,IAG7B,IAAIpB,EAAUqB,YAAW,WACxB1B,EAAiB,CAAEmB,KAAM,UAAWE,OAAQpB,MAC1C,MACHA,EAAOa,QAAUb,EAAOc,OAASf,EACjCE,SAASyB,KAAKC,YAAY3B,GAG5B,OAAOJ,QAAQgC,IAAInC,IAIpBL,EAAoByC,EAAI9C,EAGxBK,EAAoB0C,EAAI5C,EAGxBE,EAAoB2C,EAAI,SAAS1C,EAASiC,EAAMU,GAC3C5C,EAAoB6C,EAAE5C,EAASiC,IAClC7C,OAAOyD,eAAe7C,EAASiC,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE5C,EAAoBiD,EAAI,SAAShD,GACX,oBAAXiD,QAA0BA,OAAOC,aAC1C9D,OAAOyD,eAAe7C,EAASiD,OAAOC,YAAa,CAAEC,MAAO,WAE7D/D,OAAOyD,eAAe7C,EAAS,aAAc,CAAEmD,OAAO,KAQvDpD,EAAoBqD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQpD,EAAoBoD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKnE,OAAOoE,OAAO,MAGvB,GAFAzD,EAAoBiD,EAAEO,GACtBnE,OAAOyD,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOpD,EAAoB2C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRxD,EAAoB4D,EAAI,SAAS1D,GAChC,IAAI0C,EAAS1C,GAAUA,EAAOqD,WAC7B,WAAwB,OAAOrD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAF,EAAoB2C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR5C,EAAoB6C,EAAI,SAASgB,EAAQC,GAAY,OAAOzE,OAAOC,UAAUC,eAAeC,KAAKqE,EAAQC,IAGzG9D,EAAoBoB,EAAI,GAGxBpB,EAAoB+D,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAWxE,KAAKiE,KAAKO,GAC5CA,EAAWxE,KAAOd,EAClBsF,EAAaA,EAAWG,QACxB,IAAI,IAAInF,EAAI,EAAGA,EAAIgF,EAAW9E,OAAQF,IAAKN,EAAqBsF,EAAWhF,IAC3E,IAAIU,EAAsBwE,EAInBpE,EAAoBA,EAAoBsE,EAAI,G,6DCjM9C,MAAMC,EAQT,YAAmBC,EAAYC,EAAiBC,GALzC,KAAAC,SAAmB,GAMtBC,KAAKJ,KAAOA,EACZI,KAAKD,SAAWF,EAAQI,OACxBD,KAAKF,MAAQA,EACbE,KAAKE,IAAMC,KAAKC,MAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,WAAiBC,WAG7D,YAAYhC,GACJA,IAAUwB,KAAKD,WACfC,KAAKD,SAAWvB,EAChBwB,KAAKJ,KAAKa,iBAIlB,cACI,OAAOT,KAAKD,SAGT,gBACH,MAAMW,EAAQ,GACRC,EAAUX,KAAKH,QAAQe,SAAS,iCACtC,IAAK,MAAO,CAAEC,EAAUC,KAAOH,EAC3BD,EAAM5F,KAAK,CACPiG,KAAMf,KAAKJ,KAAKoB,SAChBF,KACAD,WACAI,MAAOjB,OAGf,OAAOU,EAGJ,UACH,MAAMQ,EAAmB,GACzB,IAAIC,EAASnB,KAAKmB,SAClB,KAAOA,GACHD,EAAQE,QAAQD,GAChBA,EAASA,EAAOA,SAEpB,OAAOD,EAGJ,SACH,IAAIG,EAAUrB,KAAKsB,KACnB,KAAOD,GAAWA,EAAQvB,OAASE,KAAKF,OACpCuB,EAAUA,EAAQC,KAEtB,OAAOD,EAGJ,WACH,MAAME,EAAoB,GAC1B,IAAIF,EAAUrB,KAAKwB,KACnB,KAAOH,GAAWA,EAAQvB,MAAQE,KAAKF,OACnCyB,EAASzG,KAAKuG,GACdA,EAAUA,EAAQG,KAEtB,OAAOD,EAGJ,UACH,OAAOvB,KAAKH,QAAQrF,OAAS,EAM1B,MAAMiH,EAAgBC,GACzB1B,KAAKH,QAAU4B,EACf,MAAME,EAAW,IAAIhC,EAAMK,KAAKJ,KAAM8B,EAAO1B,KAAKF,OAOlD,OANA6B,EAASL,KAAOtB,KACZA,KAAKwB,OACLxB,KAAKwB,KAAKF,KAAOK,EACjBA,EAASH,KAAOxB,KAAKwB,MAEzBxB,KAAKwB,KAAOG,EACLA,EAMJ,gBACH,GAAI3B,KAAKsB,KAEL,OADAtB,KAAKsB,KAAKzB,QAAUG,KAAKsB,KAAKzB,QAAUG,KAAKH,QACtCG,KAAK4B,SAOb,gBACH,GAAI5B,KAAKwB,KAEL,OADAxB,KAAKH,QAAUG,KAAKH,QAAUG,KAAKwB,KAAK3B,QACjCG,KAAKwB,KAAKI,SAOlB,YAAYC,GACf,GAAI7B,KAAKsB,KAAM,CACX,MAAMQ,EAAW9B,KAAKF,MACtBE,KAAKF,MAAQO,KAAK0B,IAAI,GAAI/B,KAAKsB,KAAKxB,MAAQ,EAAGO,KAAK2B,IAAI,EAAGhC,KAAKF,MAAQ+B,IACpE7B,KAAKF,QAAUgC,GACf9B,KAAKJ,KAAKa,gBAGlB,OAAOT,KAAKF,MAGT,SAQH,OAPIE,KAAKsB,OACLtB,KAAKsB,KAAKE,KAAOxB,KAAKwB,MAEtBxB,KAAKwB,OACLxB,KAAKwB,KAAKF,KAAOtB,KAAKsB,MAE1BtB,KAAKJ,KAAKa,gBACHT,KAGJ,YAAYiC,GACXjC,KAAKH,QAAQqC,WAAW,QAAqB,IAAZD,EACjCjC,KAAKH,QAAU,MAAQG,KAAKH,QAAQsC,UAAU,GACvCnC,KAAKH,QAAQqC,WAAW,SAAsB,IAAZD,IACzCjC,KAAKH,QAAU,KAAOG,KAAKH,QAAQsC,UAAU,KCrHlD,MAAM,EAKT,YAA6BC,EAAYC,EAAaC,EAAezC,EAAwB0C,G,MAAhE,KAAAH,OAAgE,KAAAG,SAgHrF,KAAAC,QAAS,EAmBT,KAAAC,UAAsB,GACtB,KAAAC,UAAsB,GACtB,KAAAC,gBAAkC,GApItC3C,KAAKqC,IAAMA,EACXrC,KAAKsC,MAAQM,UAAUN,GACvBtC,KAAK6C,WAA+C,QAArC,EAAG7C,KAAK8C,qBAAqBjD,UAAQ,QAAI,IAAIF,EAAMK,KAAM,GAAI,GAC5EA,KAAKyC,UAAU3H,KAAKkF,KAAK+C,cAGtB,oBAAoBX,EAAYC,EAAaW,GAChD,MAAOV,EAAOzC,GAAW,EAAKoD,cAAcD,GAC5C,OAAO,IAAI,EAAKZ,EAAMC,EAAKC,EAAOzC,GAAS,GAGvC,qBAAqBmD,G,MACzB,MAAME,EAAQF,EAASG,MAAM,MAC7BD,EAAMjI,QACN,MAAMqH,GAAsB,QAAd,EAACY,EAAMjI,eAAO,QAAI,IAAIkH,UAAU,UAAU3H,QAAQ4I,QAAQ,WAAY,MAEpF,IADAF,EAAMjI,QACc,KAAbiI,EAAM,IACTA,EAAMjI,QAEV,MAAO,CAACqH,EAAOY,EAAMG,KAAK,OAGvB,WACH,OAAOrD,KAAKsC,MAGT,SAASgB,GACRA,IAAatD,KAAKsC,QAClBtC,KAAKsC,MAAQgB,EACbtD,KAAKuD,8BAIN,YAAYP,G,MACf,MAAOV,EAAOzC,GAAW,EAAKoD,cAAcD,GACvChD,KAAKwD,WACNxD,KAAKsC,MAAQA,GAEjBtC,KAAK6C,WAA+C,QAArC,EAAG7C,KAAK8C,qBAAqBjD,UAAQ,QAAI,IAAIF,EAAMK,KAAM,GAAI,GAC5EA,KAAKuD,6BAGF,SACH,OAAOvD,KAAKqC,IAGT,eACH,OAAOrC,KAAKoC,KAAKqB,cAAczD,MAG5B,QAAQ0D,GACX,IAAIC,EAAQ3D,KAAKsC,MAAMsB,cAAcC,QAAQH,EAAME,gBAAkB,EAAI,IAAM,EAC/E,MACMjD,EAAyB,GAC/B,IAAK,MAAMM,KAASjB,KAAK8D,gBAAiB,CACtC,MAAMjE,EAAUoB,EAAMpB,QACtB,IAAIkE,EAAMlE,EAAQ+D,cAAcC,QAAQH,EAAME,eAC9C,KAAOG,GAAO,GACVJ,GAAS,EACThD,EAAQ7F,KAAK,CACT2G,OAAQ5B,EAAQsC,UAAU9B,KAAK2B,IAAI,EAAG+B,EARlC,IAQkDA,GACtDC,MAAOnE,EAAQsC,UAAU4B,EAAKA,EAAML,EAAMlJ,QAC1CkH,MAAO7B,EAAQsC,UAAU4B,EAAML,EAAMlJ,OAAQuJ,EAAML,EAAMlJ,OAVrD,MAYRuJ,EAAMlE,EAAQ+D,cAAcC,QAAQH,EAAME,cAAeG,EAAM,GAGvE,MAAO,CAAEJ,QAAOhD,WAGb,QACH,OAAOX,KAAK8D,gBAAgBG,QAAShD,GAAUA,EAAMiD,iBAGlD,gBACH,MAAMC,EAAS,GACf,IAAIC,EAAyBpE,KAAK6C,WAClC,KAAOuB,GACHD,EAAOrJ,KAAKsJ,GACZA,EAAMA,EAAI5C,KAEd,OAAO2C,EAGJ,aACH,MAAMtE,EAAoB,CAAC,MAAO,WAAaG,KAAKqE,WAAWpE,OAAS,IAAK,MAAO,IACpF,IAAK,MAAMgB,KAASjB,KAAK8D,gBAAiB,CACtC,MAAMZ,EAAQjC,EAAMpB,QAAQsD,MAAM,MAClCtD,EAAQ/E,KAAK,IAAIwJ,OAAqB,EAAdrD,EAAMnB,OAAa,KAAOoD,EAAMjI,SACxD4E,EAAQ/E,QAAQoI,EAAMqB,IAAKC,GAAS,IAAIF,OAAqB,EAAdrD,EAAMnB,MAAY,GAAK0E,IAG1E,OADA3E,EAAQ/E,KAAK,IACN+E,EAAQwD,KAAK,MAGjB,SACH,OAAiD,OAA1CrD,KAAKsC,MAAM0B,MAAM,qBAGrB,KAAK5B,GACR,GAAIpC,KAAKwD,SAAU,CACf,MAAMiB,EAAO,IAAItE,KAAKH,KAAKsC,OAE3B,OADAmC,EAAKC,QAAQD,EAAKE,UAAY,GACvBvC,EAAKwC,QAAQH,EAAKI,cAAc1C,UAAU,EAAG,MAIrD,gBACHnC,KAAKuD,6BAID,6BACJvD,KAAKwC,QAAS,EACd/E,WAAW,KACHuC,KAAKwC,SACLxC,KAAKwC,QAAS,EACdxC,KAAK8E,wBAEV,GAGA,kBAAkBC,GACrB/E,KAAK2C,gBAAgB7H,KAAKiK,GAGvB,qBAAqBA,GACxB/E,KAAK2C,gBAAgBqC,OAAOhF,KAAK2C,gBAAgBkB,QAAQkB,GAAW,GAMhE,sBACJ,IAAK,MAAMA,KAAY/E,KAAK2C,gBACxBoC,IAEJ/E,KAAKiF,WAAWjF,KAAKyC,UAAWzC,KAAK+C,cAGlC,OACH,MAAM1B,EAAUrB,KAAKyC,UAAUyC,MAC/B,IAAK7D,EACD,OAEJrB,KAAKiF,WAAWjF,KAAK0C,UAAWrB,GAChC,MAAMC,EAAOtB,KAAKyC,UAAUyC,MACxB5D,EACAtB,KAAKmF,YAAY7D,IAEjBtB,KAAK0C,UAAUwC,MACflF,KAAKyC,UAAU3H,KAAKuG,IAIpB,WAAc+D,EAAYC,GAC1BD,EAAMA,EAAM5K,OAAS,KAAO6K,GAC5BD,EAAMtK,KAAKuK,GAIZ,OACH,MAAM7D,EAAOxB,KAAK0C,UAAUwC,MACxB1D,IACAxB,KAAKiF,WAAWjF,KAAKyC,UAAWjB,GAChCxB,KAAKmF,YAAY3D,IAIjB,qBAAqB8D,GACzB,MAAMpC,EAAQoC,EAAYnC,MAAM,MAC1BoC,EAAQ,IAAIC,OAAO,iBACzB,IAAI3C,EACA4C,EACJ,MAAMC,EAAyB,GACzB7F,EAAoB,GAE1B,KAAoB,KAAbqD,EAAM,IACTA,EAAMjI,QAGV,MAAM0K,EAAW,KACb,GAAI9F,EAAQrF,OAAS,EACjB,OAEJ,MAAMmH,EAAW,IAAIhC,EAAMK,KAAMH,EAAQwD,KAAK,MAAOhD,KAAK2B,IAAI,EAAG0D,EAAalL,OAAS,IACvFqF,EAAQmF,OAAO,GACVnC,IACDA,EAAalB,GAEb8D,IACAA,EAAUjE,KAAOG,EACjBA,EAASL,KAAOmE,GAEpBA,EAAY9D,GAGhB,IAAK,MAAM6C,KAAQtB,EAAO,CACtB,MAAMc,EAAQQ,EAAKR,MAAMuB,GACzB,GAAIvB,EAAO,CACP2B,IACA,MAAMC,EAAc5B,EAAM,GAAGxJ,OAC7B,KAAOkL,EAAaA,EAAalL,OAAS,IAAMoL,GAC5CF,EAAaR,MAEjBQ,EAAa5K,KAAK8K,GAEtB/F,EAAQ/E,KAAK0J,EAAKqB,OAAOH,EAAaA,EAAalL,OAAS,GAAK,IAGrE,OADAmL,IACO9C,GC7OR,MAAMiD,EACT,YAA6B1D,GAAA,KAAAA,OAEtB,mBAAmBsB,GACtB,OAAO1D,KAAKoC,KAAK2D,WAAWC,OAAQpG,GAASA,EAAKyE,WAAWT,cAAcC,QAAQH,EAAME,gBAAkB,IAI5G,MAAM,EAAb,cACqB,KAAAqC,MAA2B,IAAIC,IAC/B,KAAAC,YAA2C,IAAID,IAC/C,KAAAE,UAAyC,IAAIF,IAC7C,KAAAG,SAAW,IAAIP,EAAS9F,MAQjC,KAAAsG,kBAAoC,GANrC,QAAQjE,EAAaW,GACxB,MAAMpD,EAAO,EAAK2G,aAAavG,KAAMqC,EAAKW,GAC1ChD,KAAKiG,MAAMO,IAAInE,EAAKzC,GACpBI,KAAKyG,oBAAoB7G,GAIrB,eACJ,IAAK,MAAMmF,KAAY/E,KAAKsG,kBACxBvB,IAID,SAASA,GACZ/E,KAAKsG,kBAAkBxL,KAAKiK,GAGzB,QAAQ1C,GACC,KAARA,GAAsB,MAARA,IACdA,GAAM,IAAIlC,MAAO0E,cAAc1C,UAAU,EAAG,KAEhD,MAAMvC,EAAOI,KAAKiG,MAAM7H,IAAIiE,GAC5B,OAAIzC,GAGG,IAAI,EAAKI,KAAMqC,EAAKA,EAAK,IAAI,GAGjC,WACH,MAAO,IAAIrC,KAAKiG,MAAMS,UAGnB,cACH,OAAO1G,KAAKqG,SAGT,WAAWzG,GACdI,KAAKiG,MAAMU,OAAO/G,EAAKoB,UACvBhB,KAAK4G,6BAA6BhH,GAClCI,KAAK6G,eAGF,cAAcjH,G,QACjB,OAWK,QAXE,EAC8B,QAD9B,EACHI,KAAKoG,UAAUhI,IAAIwB,EAAKoB,iBAAS,eAAEuD,IAAKuC,IACpC,IAAKA,EAAKjG,SAAU,CAChB,MAAMkG,EAAa/G,KAAKiG,MAAM7H,IAAI0I,EAAK/F,MACvC,OAAIgG,EACO,IAAKD,EAAMjG,SAAUkG,EAAW1C,YAEhC,IAAKyC,EAAMjG,SAAUiG,EAAK/F,MAGzC,OAAO+F,WACV,QAAK,GAIN,oBAAoBlH,GACxB,IAAK,MAAMkH,KAAQlH,EAAKc,QAAS,CAC7B,MAAMsG,EAAahH,KAAKmG,YAAY/H,IAAI0I,EAAK/F,MACzCiG,EACAA,EAAWlM,KAAKgM,GAEhB9G,KAAKmG,YAAYK,IAAIM,EAAK/F,KAAM,CAAC+F,IAErC,MAAMG,EAAWjH,KAAKoG,UAAUhI,IAAI0I,EAAKhG,IACrCmG,EACAA,EAASnM,KAAKgM,GAEd9G,KAAKoG,UAAUI,IAAIM,EAAKhG,GAAI,CAACgG,KAKjC,6BAA6BlH,G,MACjC,IAAK,MAAMkH,KAA2C,QAAvC,EAAI9G,KAAKmG,YAAY/H,IAAIwB,EAAKoB,iBAAS,QAAI,GAAI,CAC1D,MAAMiG,EAAWjH,KAAKoG,UAAUhI,IAAI0I,EAAKhG,IACrCmG,GACAjH,KAAKoG,UAAUI,IACXM,EAAKhG,GACLmG,EAASjB,OAAQkB,GAAMA,IAAMJ,IAIzC9G,KAAKmG,YAAYQ,OAAO/G,EAAKoB,UAG1B,OAAOpB,GACNI,KAAKiG,MAAMkB,IAAIvH,EAAKoB,YAGxBpB,EAAK2C,QAAS,EACdvC,KAAKiG,MAAMO,IAAI5G,EAAKoB,SAAUpB,GAC9BI,KAAK4G,6BAA6BhH,GAClCI,KAAKyG,oBAAoB7G,GACzBI,KAAK6G,iBC9Gb,MAAMO,EAAoD,CACtDC,EAAG,CAAC,SAAU,WACd,IAAK,CAAC,SAAU,WAChB,IAAK,CAAC,WAAY,aAClB,IAAK,CAAC,WAAY,cAQtB,SAASC,EAAUtE,EAAkBuE,EAAexD,GAChD,MAAMyD,EAASxE,EAASa,QAAQ0D,EAAOxD,GAEvC,MAAO,CADMf,EAASb,UAAU4B,EAAKyD,EAAS,OAAIhK,EAAYgK,GAChDA,EAAS,EAAIxE,EAASxI,OAASgN,EAASD,EAAM/M,QAGhE,SAASiN,EAAarK,EAAgBkF,EAAeF,GACjD,IAAIsF,EAAa,GACbC,GAAiB,EACrB,GAA+B,OAA3BvK,EAAO+E,UAAU,EAAG,GAAa,CACjC,MAAMvC,EAAOwC,EAAKwC,QAAQxH,EAAO+E,UAAU,IACvCvC,EAAK2C,QACLmF,EAAa,qBACTpF,EAAMrC,OAAOzF,OAAS,IACtB8H,EAAQ1C,EAAKyE,WACbsD,GAAiB,IAGrBD,EAAa,kCAGjBA,EAAa,+DAOjB,OALIpF,EAAMrC,OAAOzF,OAAS,EACtB8H,EAAQlF,EACDuK,IACPrF,EAKR,SAAsBU,GAClB,IAAIe,EAAM,EACV,MAAMqB,EAAsB,GAC5B,IAAIjB,EAAS,GACb,KAAOJ,EAAMf,EAASxI,QAAQ,CAC1B,MAAM6G,EAAU2B,EAASe,GACnB6D,EAAiCxC,EAAMA,EAAM5K,OAAS,GACtDqN,EAAsCzC,EAAMA,EAAM5K,OAAS,GAC3DsN,EAAkBV,EAAa/F,GACjCyG,GACIF,GAAUA,EAAOG,QAAU1G,GACvBwG,EACAA,EAAYhI,SAAWiI,EAAgB,GAAKF,EAAO/H,QAAUiI,EAAgB,GAE7E3D,GAAU2D,EAAgB,GAAKF,EAAO/H,QAAUiI,EAAgB,GAEpE1C,EAAMF,OAENE,EAAMtK,KAAK,CAAEiN,MAAO1G,EAASxB,QAAS,KAE1CkE,MAIA6D,EACAA,EAAO/H,SAAWwB,EAElB8C,GAAU9C,EAGd0C,KAGJ,GAAII,EAAO3J,OAAS,GAAKwI,EAASxI,QAAU,EACxC,OAAOwI,EAGX,GAAIoC,EAAM5K,OAAS,EAEf,OAAOwI,EAGX,OAAOmB,EA/CK6D,CAAa1F,IAElB,KAAKoF,UAAmBtK,MAAWkF,QAgD/B,MAAM2F,EAEjB,YAAoC7F,GAAA,KAAAA,OAD7B,KAAA8F,mBAAsBC,GAAwBA,EAEjD,gCAAgBC,KAAM/M,IAClB2E,KAAKkI,mBAAqB7M,EAAQgN,eAClC,IAAK,MAAMC,KAAWrM,SAASsM,uBAAuB,QAClDD,EAAQE,UAAYnN,EAAQgN,eAAeC,EAAQE,aAKxD,OAAOxF,GACV,IAAIe,EAAM,EACV,MAAMqB,EAAsB,GAC5B,IAAIjB,EAAS,GACTsE,GAAQ,EAaZ,IAXIzF,EAASd,WAAW,OACpB6B,EAAM,EACN0E,GAAQ,GACDzF,EAASd,WAAW,QAC3B6B,EAAM,EACNI,EAAS,2BACFnB,EAASd,WAAW,UAC3B6B,EAAM,EACNI,EAAS,mCAGNJ,EAAMf,EAASxI,QAAQ,CAC1B,MAAM8G,EAAO0B,EAASe,EAAI,GACpB1C,EAAU2B,EAASe,GAEnB6D,GADO5E,EAASe,EAAI,GACaqB,EAAMA,EAAM5K,OAAS,IACtDqN,EAAsCzC,EAAMA,EAAM5K,OAAS,GAEjE,IAAIkO,EACJ,GAAI1F,EAASd,WAAW,KAAM6B,GAAM,CAChC,MAAOzB,EAAOqG,GAAerB,EAAUtE,EAAU,KAAMe,EAAM,IACtD3G,EAAQwL,GAAgBtB,EAAUtE,EAAU,IAAK2F,GACxD5E,EAAM6E,EACNF,EAAO,aAAatL,WAAgBkF,GAASlF,WAC1C,GAAI4F,EAASd,WAAW,IAAK6B,GAAM,CACtC,MAAOzB,EAAOqG,GAAerB,EAAUtE,EAAU,KAAMe,EAAM,IACtD3G,EAAQwL,GAAgBtB,EAAUtE,EAAU,IAAK2F,GACxD5E,EAAM6E,EACNF,EAAOjB,EAAarK,EAAQkF,EAAOtC,KAAKoC,WACrC,GAAIY,EAASd,WAAW,KAAM6B,GAAM,CACvC,MAAO8E,EAAMrB,GAAUF,EAAUtE,EAAU,KAAMe,EAAM,GACvDA,EAAMyD,EACNkB,EAAO,sBAAsB1I,KAAKkI,mBAAmBW,iBAClD,GAAI7F,EAASd,WAAW,UAAW6B,IAAQf,EAASd,WAAW,WAAY6B,GAAM,CACpF,MAAO+E,EAAKtB,GAAUF,EAAUtE,EAAU,IAAKe,GAC/CA,EAAMyD,IAAWxE,EAASxI,OAASgN,EAASA,EAAS,EACrDkB,EAAOjB,EAAaqB,EAAKA,EAAK9I,KAAKoC,MAGvC,GAAIsG,EAAM,CACFd,EACAA,EAAO/H,SAAW6I,EAElBvE,GAAUuE,EAEd,SAGJ,MAAMZ,EAAkBV,EAAa/F,GACjCyG,GACIF,GAAUA,EAAOG,QAAU1G,GACvBwG,EACAA,EAAYhI,SAAWiI,EAAgB,GAAKF,EAAO/H,QAAUiI,EAAgB,GAE7E3D,GAAU2D,EAAgB,GAAKF,EAAO/H,QAAUiI,EAAgB,GAEpE1C,EAAMF,OACU,MAAT5D,QAAyB9D,IAAT8D,EACvB8D,EAAMtK,KAAK,CAAEiN,MAAO1G,EAASxB,QAAS,KAElC+H,EACAA,EAAO/H,SAAWwB,EAElB8C,GAAU9C,EAGlB0C,MAIA6D,EACAA,EAAO/H,SAAWwB,EAElB8C,GAAU9C,EAGd0C,KAGJ,IAAK,MAAMgF,KAAa3D,EACpBjB,GAAU4E,EAAUhB,MAAQgB,EAAUlJ,QAG1C,OAAIsE,EAAO3J,OAAS,GAAKwI,EAASxI,QAAU,EACjCwI,GAGXmB,EAASA,EAAOf,QAAQ,MAAO,QAE3BqF,EACO,eAAiBtE,EAAS,gBAE9BA,ICpMA,MAAM6E,EACjB,YAAoC5G,EAA6B6G,GAA7B,KAAA7G,OAA6B,KAAA6G,aAE1D,QAAQ5G,GACPA,EAAIH,WAAW,QACfG,EAAMA,EAAIF,UAAU,IAExB,MAAM+G,EAAUlJ,KAAKoC,KAAKwC,QAAQvC,GAClC8G,QAAQC,UAAU,CAAE/G,IAAK6G,EAAQlI,UAAYkI,EAAQ7E,WAAoB,MAARhC,EAAc,IAAM6G,EAAQlI,UAC7FhB,KAAKiJ,WAAWC,ICVT,MAAMG,EAEjB,YAA6BC,GAAA,KAAAA,MADZ,KAAAC,iBAAmB,CAAC,YAAa,aAAc,mBAGzD,OAAOC,EAA4BC,G,MACtC,IAAK,MAAMpE,KAA0B,QAAtB,EAAImE,EAAaE,aAAK,QAAI,GACrC,GAAkB,SAAdrE,EAAKsE,MAAmB3J,KAAKuJ,iBAAiBK,SAASvE,EAAKnI,MAAO,CACnE,MAAM2M,EAAOxE,EAAKyE,YACdD,GACA7J,KAAKsJ,IAAIS,WAAWF,GAAMzB,KAAM4B,GAAiBP,EAASO,EAAaC,aC4DpF,SAASC,EAAmDC,GAE/D,OAvDJ,SAAgD7B,GAC5C,MAAM8B,EAAkB9B,EACxB,MAAO,CACH,YAAY+B,GACR,IAAK,MAAM/M,KAAQ+M,EACK,iBAAT/M,GAA8B,KAATA,GAC5B8M,EAAgBE,UAAUC,IAAIjN,GAGtC,OAAO0C,MAEX,aAAalB,EAAKN,GAEd,OADA4L,EAAgB9N,aAAawC,EAAKN,EAAMgC,YACjCR,MAEX,YAAYwK,GAER,OADAJ,EAAgBzM,YAAY6M,GACrBxK,MAEX,aAAauB,GACT,IAAK,MAAMiJ,KAASjJ,EACZiJ,GACAJ,EAAgBzM,YAAY6M,GAGpC,OAAOxK,MAEX,UAAU0I,GAEN,OADA0B,EAAgB5B,UAAYE,EACrB1I,MAEX,UAAUyK,GAEN,OADAL,EAAgBM,UAAYD,EACrBzK,MAEX,iBAAiB9C,EAAM6H,GAEnB,OADAqF,EAAgBO,iBAAiBzN,EAAO0N,GAAO7F,EAAS6F,EAAIR,IACrDpK,MAEX,MAAM6K,GAEF,OADAA,EAAGT,GACIpK,MAEX,KAAKlB,EAAKN,GAEN,OADA4L,EAAgBU,QAAQhM,GAAON,EACxBwB,MAEX+K,MAAK,IACMX,GAORY,CADmC/O,SAASC,cAAciO,IAG9D,SAASc,EAAW1J,GACvB,MAAM2J,EAAWjP,SAASkP,yBAC1B,IAAK,MAAMX,KAASjJ,EAChB2J,EAASvN,YAAY6M,GAEzB,OAAOU,EAEJ,SAASE,EAAejK,EAAqBkK,GAChDlK,EAAOqH,UAAY,GACnBrH,EAAOxD,YAAY0N,GAEhB,SAASC,EAAoBC,EAAwBC,GACxD,OAAOtB,EAAY,KACd5N,aAAa,OAAQkP,GACrBb,iBAAiB,QAAUC,IACxBA,EAAGa,iBACHF,EAAWG,QAAQF,KCzFhB,I,IAAA,GACXG,YAAa,8UAIbC,aAAc,8UAIdC,aAAc,mZAMdC,KAAM,ydCVV,SAASC,EAAwBC,EAAoBC,GACjD,OAAID,EAAE,GAAGrI,QAAUsI,EAAE,GAAGtI,MAChBqI,EAAE,GAAGxI,UAAYyI,EAAE,GAAGzI,SACfyI,EAAE,GAAG5H,WAAW6H,cAAcF,EAAE,GAAG3H,YAE1C2H,EAAE,GAAGxI,UAAYyI,EAAE,GAAGzI,SACfyI,EAAE,GAAGzI,SAAYwI,EAAE,GAAGxI,SAAW,EAAI,GAAM,EAE/CwI,EAAE,GAAG3H,WAAW6H,cAAcD,EAAE,GAAG5H,YAEnC4H,EAAE,GAAGtI,MAAQqI,EAAE,GAAGrI,MAkF1B,SAASwI,EAAQZ,EAAwBa,G,MAC5C,MAAMC,EAAcpQ,SAASC,cAAc,MAC3C,IACIoQ,EADA5I,EAA0C,QAArC,EAAG6I,aAAaC,QAAQ,qBAAa,QAAI,GAE9CvG,EAAgB,GACpB,MAAMwG,EAnDV,SACIC,EACAC,EACAC,EACAC,GAEA,MAAMJ,EAAexQ,SAASC,cAAc,SAiC5C,OAhCAuQ,EAAajO,MAAQqO,EACrBJ,EAAanQ,aAAa,OAAQ,UAClCmQ,EAAanQ,aAAa,cAAe,UACzCmQ,EAAa9B,iBAAiB,QAAS,KACnC+B,EAAOD,EAAajO,SAExBiO,EAAa9B,iBAAiB,UAAYC,IACvB,WAAXA,EAAG9L,KACH2N,EAAajO,MAAQ,GACrBkO,EAAO,KAEPC,EAAcL,IACV,MAAMQ,EAAaR,aAAQ,EAARA,EAAUS,kBAC7B,GAAe,UAAXnC,EAAG9L,KAAmBgO,aAAsBE,kBAC5CpC,EAAGa,iBACHqB,EAAWG,aACR,GAAe,cAAXrC,EAAG9L,IAAqB,CAC/B8L,EAAGa,iBACH,MAAMyB,EAAcZ,EAASa,mBACzBD,aAAuBE,eACvBR,EAAOM,QAER,GAAe,YAAXtC,EAAG9L,IAAmB,CAC7B8L,EAAGa,iBACH,MAAM4B,EAAcf,EAASgB,uBACzBD,aAAuBD,eACvBR,EAAOS,QAMpBZ,EAYcc,CAAiBb,EAAS7B,GAAQyB,EAAWzB,EAAGyB,GAAY,GAAKM,EAAQlJ,GAE9F,SAASkJ,EAAOY,GACRlB,GACAA,EAAShC,UAAU1I,OAAO,UAE9B0K,EAAWkB,EACXlB,EAAShC,UAAUC,IAAI,UAG3B,SAASmC,EAAOe,GAEZ,GADA/J,EAAQ+J,EACa,IAAjB/J,EAAMlJ,OACN,OAEJ+R,aAAamB,QAAQ,aAAchK,GACnC,MAAMiK,EAAU1H,EACX1B,IAAK3E,GAA0B,CAACA,EAAgB,KAAV8D,EAAe,CAAE/C,QAAS,GAAIgD,MAAO,GAAM/D,EAAKe,QAAQ+C,KAC9FsC,OAAO,EAAE,EAAIrC,YAAaA,EAAQ,GAClCiK,KAAK7B,GACLxH,IAAKc,GAvGlB,SAA+BkG,GAAyB3L,EAAMe,IAC1D,OAAOuJ,EAAY,MACdvM,YACG2N,EAAoBC,EAAY3L,EAAKoB,UAChC6M,aAAa,CACV3D,EAAY,QAAQQ,UAAU9K,EAAKyE,YAAY0G,WAC5CpK,EAAQA,QAAQ4D,IAAKP,GACpBkG,EAAY,QACP2D,aAAa,CACV5R,SAAS6R,eAAe9J,EAAMvC,QAC9ByI,EAAY,KAAKQ,UAAU1G,EAAMA,OAAO+G,QACxC9O,SAAS6R,eAAe9J,EAAMtC,SAEjCqJ,WAGZA,SAERA,QAqFkBgD,CAAsBxC,EAAYlG,IACrD,GAAIsI,EAAQnT,OAAS,EACjB4Q,EAAeiB,EAAapB,EAAW0C,IACvCf,EAAOe,EAAQ,QACZ,CACH,MAAMK,EAvFlB,SAA4BzC,EAAwB7H,GAChD,OAAOwG,EAAY,MACd+D,SAAS,UACTtQ,YACG2N,EAAoBC,EAAY7H,GAC3BgH,UAAU,gBAAkBhH,EAAQ,KACpCqH,SAERA,QA+EuBmD,CAAmB3C,EAAY7H,GACnD0H,EAAeiB,EAAa2B,GAC5BpB,EAAOoB,IAIf,SAASG,EAAOC,GACZnI,EAAQmI,EACR,IAAK,MAAMxO,KAAQqG,EACfrG,EAAKyO,kBAAkB,KACnB3B,EAAOhJ,KAGfgJ,EAAOhJ,GAeX,OAZAnE,OAAOoL,iBAAiB,QAAUnP,IAC9B,GAAc,MAAVA,EAAEsD,KAAe7C,SAASqS,gBAAkBrS,SAASsS,KAGrD,OAFA9B,EAAa+B,aACb/B,EAAaG,WAKjBR,GACA+B,EAAO/B,GAGJ,CACHoB,GAAItD,EAAY,OACX+D,SAAS,WACTJ,aAAa,CACV3D,EAAY,QACP2D,aAAa,CAACvC,EAAoBC,EAAY,KAAK/C,UAAUiG,EAAM3C,MAAMf,QAAS0B,IAClF1B,QACLsB,IAEHtB,QACLoD,UCvKD,SAASO,EAAajK,GACzB,OACIA,EAAKkK,cAAgB,KAAO,KAAOlK,EAAKmK,WAAa,IAAI/I,QAAQ,GAAK,KAAO,IAAMpB,EAAKE,WAAWkB,QAAQ,GCWnH,SAASgJ,EAAUtD,EAAwB3L,GACvC,OAAIA,EAAK4D,SACE0G,EAAY,MACdvM,YAAY2N,EAAoBC,EAAY3L,EAAKoB,UAAU0J,UAAU9K,EAAKyE,YAAY0G,SACtFA,QAEEb,EAAY,MACdvM,YACGuM,EAAY,SACP4E,MAAOtB,GAAQA,EAAGhP,MAAQoB,EAAKyE,YAC/BsG,iBAAiB,UAAW,CAACC,EAAI4C,MACd,MAAX5C,EAAG9L,KAAe8L,EAAGmE,SAAuB,UAAXnE,EAAG9L,OACrC8L,EAAGa,iBACH+B,EAAGwB,UAGVrE,iBAAiB,SAAU,CAACsE,EAAKzB,IAAO5N,EAAKsP,SAAS1B,EAAGhP,QACzDmM,iBAAiB,QAAS,CAACsE,EAAKzB,IAAO5N,EAAKsP,SAAS1B,EAAGhP,QACxDuM,SAERA,QAIb,SAASoE,EAAe5D,EAAwB3L,GAC5C,GAAIA,EAAK4D,SAAU,CACf,MAAM4L,EAAW,IAAIjP,KAAKP,EAAKyE,YAC/B+K,EAAS1K,QAAQ0K,EAASzK,UAAY,GACtC,MAAM0K,EAAW,IAAIlP,KAAKP,EAAKyE,YAE/B,OADAgL,EAAS3K,QAAQ2K,EAAS1K,UAAY,GAC/BuF,EAAY,OACd+D,SAAS,YACTJ,aAAa,CACVvC,EAAoBC,EAAYmD,EAAaU,IACxC5G,UAAUiG,EAAM9C,aAChBsC,SAAS,aACTlD,QACLO,EAAoBC,EAAYmD,EAAaW,IACxC7G,UAAUiG,EAAM7C,cAChBqC,SAAS,aACTlD,UAERA,SAIb,SAASuE,EAAYC,EAAwB3P,GACzC,IAAI4P,GAAS,EACb,MAAMC,EAAYvF,EAAY,OAAO+D,SAAS,iBAAiBlD,QACzD2E,EAAaxF,EAAY,UAC1B1B,UAAUiG,EAAM5C,cAChBlB,iBAAiB,QAAS,KACnB6E,GACAA,GAAS,EACTC,EAAUnF,UAAU1I,OAAO,yBAE3B4N,GAAS,EACTC,EAAUnF,UAAUC,IAAI,0BAG/BQ,QACC4E,EAAazF,EAAY,OAC1B+D,SAAS,qBACTJ,aAAa,CACV3D,EAAY,UACPQ,UAAU,UACVC,iBAAiB,QAAS,KACvB4E,EAAMK,WAAWhQ,KAEpBmL,QACLb,EAAY,UACPQ,UAAU,YACVC,iBAAiB,QAAS,KACvB8E,EAAUnF,UAAU1I,OAAO,uBAC3B2N,EAAMM,QAAQjQ,EAAM,SAEvBmL,UAERA,QAKL,OAHA0E,EAAU9R,YAAY+R,GACtBD,EAAU9R,YAAYgS,GAEfF,EAGJ,SAASK,EAAWP,EAAwB3P,GAC/C,OAAOsK,EAAY,OACd+D,SAAS,gBACTJ,aAAa,CACVgB,EAAUU,EAAMhE,WAAY3L,GAC5BuP,EAAeI,EAAMhE,WAAY3L,GACjC0P,EAAYC,EAAO3P,KAEtBmL,QC/DF,SAASgF,GAAU,SAAE/M,EAAQ,qBAAEgN,EAAoB,aAAEC,GAA4BhP,GACpF,OAAOiJ,EAAY,OACd+D,SAAS,UAAShN,EAAMiP,WAAY,gBACpCjW,KAAK,QAASgH,EAAMnB,MAAMU,YAC1BgI,UAAUxF,EAASmN,OAAOlP,EAAMpB,UAChCiP,MAAOtB,GAAOwC,EAAqB/O,EAAOuM,IAC1C7C,iBAAiB,QAAUC,GAAOqF,EAAahP,EAAO2J,IACtDG,QA8BT,SAASqF,EAAgBb,EAAuB3P,GAC5C,OAAOqL,EAAW,CACd6E,EAAWP,EAAO3P,GAClBsK,EAAY,OACP+D,SAAS,UACTJ,aAAajO,EAAKkE,gBAAgBS,IAAKtD,GAAU8O,EAAUR,EAAOtO,KAClE8J,QACLb,EAAY,MAAMQ,UAAU,aAAaK,QACzCb,EAAY,OACP+D,SAAS,SAAU,aACnBJ,aAAajO,EAAKyQ,eAAepM,QAAS6C,GArCvD,UAAsB,SAAE9D,EAAQ,WAAEuI,GAA6BzE,G,QAC3D,MAAMwJ,EAAYpG,EAAY,OACzB+D,SAAS,SACThU,KAAK,QAAS,KACd0D,YAAY2N,EAAoBC,EAAYzE,EAAK/F,MAAM2J,UAAU5D,EAAKjG,UAAUkK,SAChFA,QAECwF,EAASzJ,EAAK7F,MAAMC,UACpBK,EAAWuF,EAAK7F,MAAMM,WAO5B,OANwB,IAApBA,EAAS/G,OACT+V,EAAOzV,QAAsC,QAA9B,EAAoB,QAApB,EAACgM,EAAK7F,MAAME,gBAAQ,eAAEI,kBAAQ,QAAM,KAEnDgP,EAAOzV,KAAKgM,EAAK7F,OACjBsP,EAAOzV,QAAQyG,IAEZ0J,EAAW,CACdqF,KACGC,EAAOhM,IAAKtD,GACXiJ,EAAY,OACP+D,SAAS,SACThU,KAAK,SAAUgH,EAAMnB,MAAQ,GAAGU,YAChCgI,UAAUxF,EAASmN,OAAOlP,EAAMpB,UAChCkL,WAe+CyF,CAAajB,EAAOzI,KACvEiE,UAuCN,SAAS0F,EAASlB,EAAsBmB,GAC3C,MAAMC,EAAczG,EAAY,OAAO+D,SAAS,QAAQlD,QACxD,IAAI6F,EAEJ,MAAMC,EAAiC,IAChCtB,EACHM,QAAS,CAACjQ,EAAMlB,IAASyP,EAAO,CAAEvO,OAAMlB,UAG5C,SAASyP,EAAO2C,GACZF,EAAWE,EACX7U,SAASqG,MAAQwO,EAASlR,KAAKyE,WAET,QAAlByM,EAASpS,MACT0M,EACIuF,EAlDhB,SAAuBpB,EAAqB3P,GACxC,MAAMmR,EAAW7G,EAAY,YACxB+D,SAAS,cACTzF,UAAU5I,EAAKmD,cACf4H,iBAAiB,UAAW,CAACC,EAAI4C,KACf,MAAX5C,EAAG9L,KAAe8L,EAAGmE,UACrBnE,EAAGa,iBACH7L,EAAKuF,YAAYqI,EAAGhP,OACpB+Q,EAAMM,QAAQjQ,EAAM,YAG3BmL,QACL,OAAOE,EAAW,CACd8F,EACA7G,EAAY,OACP+D,SAAS,WACTJ,aAAa,CACV3D,EAAY,UACPQ,UAAU,QACVC,iBAAiB,QAAS,KACvB/K,EAAKuF,YAAY4L,EAASvS,OAC1B+Q,EAAMM,QAAQjQ,EAAM,WAEvBmL,QACLb,EAAY,UACPQ,UAAU,SACVC,iBAAiB,QAAS,KACvB4E,EAAMM,QAAQjQ,EAAM,WAEvBmL,UAERA,UAoBGiG,CAAc,CAAEnB,QAAS,CAACjQ,EAAMlB,IAASyP,EAAO,CAAEvO,OAAMlB,UAAWoS,EAASlR,OAEhF+Q,EAAYrG,UAAUC,IAAI,eAE1Ba,EAAeuF,EAAaP,EAAgBS,EAAgBC,EAASlR,OACrE+Q,EAAYrG,UAAU1I,OAAO,cAGjCrC,OAAO0R,SAAS,EAAG,GAOvB,OAJIP,GACAvC,EAAOuC,GAGJ,CACHC,cACAxC,UCxED,SAAS+C,GAAO,SAAElO,EAAQ,OAAEmO,EAAM,gBAAEC,EAAe,YAAEC,EAAW,SAAEhL,IACrE,MAAMiL,EAASpH,EAAY,YACtB+D,SAAS,iBACT3R,aAAa,cAAe,cAC5BA,aAAa,OAAQ,KACrByO,QACCwG,EAASrH,EAAY,YACtB+D,SAAS,gBAAiB,yBAC1B3R,aAAa,cAAe,cAC5BA,aAAa,OAAQ,KACrByO,QACL,IAAIyG,EAGJ,SAASC,IACLH,EAAOI,MAAMC,OAAS,OACtBL,EAAOI,MAAMC,OAASL,EAAOM,aAAe,KAGhD,SAASC,IACL,GAAIL,EAAS,CACT,MAAOvQ,EAAOqH,GAAWkJ,EACzBA,OAAUhU,EACV,MAAMsU,EAAcR,EAAO9S,MAC3ByC,EAAMpB,QAAUiS,EAChBxJ,EAAQgC,UAAU1I,OAAO,kBACrBX,EAAMiP,UACN5H,EAAQgC,UAAUC,IAAI,gBAEtBjC,EAAQgC,UAAU1I,OAAO,gBAE7B0G,EAAQE,UAAYxF,EAASmN,OAAOlP,EAAMpB,UAIlD,SAASkS,EAAa9Q,EAAc+Q,GAChC,MAAM1J,EAAU8I,EAAgBhT,IAAI6C,GAChCqH,IACAuJ,IACAL,EAAU,CAACvQ,EAAOqH,GAClBA,EAAQgC,UAAUC,IAAI,kBACtB+G,EAAO9S,MAAQyC,EAAMpB,QACrBuL,EAAe9C,EAASgJ,GACxBA,EAAOW,kBAAkBD,EAAUA,GACnCV,EAAO9C,QACPiD,KAuBR,SAASS,IACL,OAA8B,IAA1BZ,EAAOa,gBAAgD,IAAxBb,EAAOc,aAC/B,QAEPd,EAAOa,iBAAmBb,EAAO9S,MAAMhE,QAAU8W,EAAOc,eAAiBd,EAAO9S,MAAMhE,OAC/E,MAEJ,UA4DX,SAAS6X,EAASpR,EAAc2J,GACb,YAAXA,EAAG9L,KAAqBmC,EAAMK,MAjBtC,WACIiQ,EAAOG,MAAMY,MAAQhB,EAAOiB,YAAc,KAC1ChB,EAAO/I,UAAY,IACnB,MAAMgK,EAAgBjB,EAAOK,aAE7B,OADAL,EAAO/I,UAAY8I,EAAO9S,MAAM2D,UAAU,EAAGmP,EAAOa,gBAC7CZ,EAAOK,eAAiBY,EAYWC,IACtC7H,EAAGa,iBACHsG,EAAa9Q,EAAMK,MAAO,IACR,cAAXsJ,EAAG9L,KAAuBmC,EAAMO,MAZ/C,WACI+P,EAAOG,MAAMY,MAAQhB,EAAOiB,YAAc,KAC1ChB,EAAO/I,UAAY8I,EAAO9S,MAC1B,MAAMkU,EAAanB,EAAOK,aAE1B,OADAL,EAAO/I,UAAY8I,EAAO9S,MAAM2D,UAAU,EAAGmP,EAAOc,cAC7Cb,EAAOK,eAAiBc,EAOoBC,IAC/C/H,EAAGa,iBACHsG,EAAa9Q,EAAMO,MAAO,IACR,cAAXoJ,EAAG9L,KAA4C,UAArBoT,KAAgCjR,EAAMK,MACvEsJ,EAAGa,iBACHsG,EAAa9Q,EAAMK,MAAO,IACR,eAAXsJ,EAAG9L,KAA6C,QAArBoT,KAA8BjR,EAAMO,OACtEoJ,EAAGa,iBACHsG,EAAa9Q,EAAMO,KAAM,IAmEjC,OA/DA8P,EAAO3G,iBAAiB,UAAYC,IAChC,IAAK4G,EACD,OAEJ,MAAOvQ,EAAOqH,GAAWkJ,EACV,UAAX5G,EAAG9L,KAAoB8L,EAAGgI,SAGR,WAAXhI,EAAG9L,KAAgC,MAAX8L,EAAG9L,KAAe8L,EAAGmE,SACpDnE,EAAGa,iBACHoG,KACkB,cAAXjH,EAAG9L,IApFlB,SAAuBmC,EAAc2J,G,MACjC,GAA0B,UAArBsH,KAAgCZ,EAAO9S,MAAMhE,OAAS,IAAOyG,EAAMK,KACpE,OAEJsJ,EAAGa,iBACHoG,IACA,MAAMgB,EAAY5R,EAAMK,KAClBwR,EAAeD,EAAUhT,QAAQrF,OACjCuY,EAAe9R,EAAM+R,gBACvBD,IACiC,QAAjC,EAAA3B,EAAgBhT,IAAI2U,UAAa,SAAEnR,UAErBwP,EAAgBhT,IAAIyU,IAElCd,EAAac,EAAWC,GAuExBE,CAAc/R,EAAO2J,GACH,WAAXA,EAAG9L,IApElB,SAAuBmC,EAAc2J,G,MACjC,GAA0B,QAArBsH,KAA8BZ,EAAO9S,MAAMhE,OAAS,IAAOyG,EAAMO,KAClE,OAEJoJ,EAAGa,iBACHoG,IACA,MAAMiB,EAAe7R,EAAMpB,QAAQrF,OAC7BuY,EAAe9R,EAAMgS,gBACvBF,IACiC,QAAjC,EAAA3B,EAAgBhT,IAAI2U,UAAa,SAAEnR,UAEvCmQ,EAAa9Q,EAAO6R,GA0DhBG,CAAchS,EAAO2J,GACH,QAAXA,EAAG9L,IAxDlB,SAAqBmC,EAAcqH,EAAsBsC,GACrD,IAAK3J,EAAMK,KACP,OAEJsJ,EAAGa,iBACH,MAAMyH,EAAWjS,EAAMkS,YAAYvI,EAAGgI,UAAY,EAAI,GACtDtK,EAAQwC,QAAQhL,MAAQoT,EAAS1S,WAmD7B2S,CAAYlS,EAAOqH,EAASsC,GACrB,CAAC,UAAW,YAAa,YAAa,cAAchB,SAASgB,EAAG9L,MACvEuT,EAASpR,EAAO2J,IAZhBA,EAAGa,iBA5GX,SAAexK,EAAc2J,GACzB,GAAIA,EAAGgI,UAAYhI,EAAGmE,QAClB,OAEJnE,EAAGa,iBACH,MAAMhK,EAAS6P,EAAO9S,MAAM2D,UAAU,EAAGmP,EAAOa,gBAC1CzQ,EAAQ4P,EAAO9S,MAAM2D,UAAUmP,EAAOc,cAC5Cd,EAAO9S,MAAQiD,EACfoQ,IACA,MAAMlQ,EAAWV,EAAMkC,MAAM1B,EAAQC,GAC/B0R,EAAa/B,EAAY1P,GAC/ByP,EAAgB5K,IAAI7E,EAAUyR,GAC9B,MAAMC,EAAajC,EAAgBhT,IAAI6C,GACnCoS,GACAA,EAAWC,sBAAsB,WAAYF,GAEjDrB,EAAapQ,EAAU,GA6FnBwB,CAAMqO,EAAQ,GAAI5G,MAe1B0G,EAAO3G,iBAAiB,QAAS,KAC7B8G,MAGJH,EAAO3G,iBAAiB,QAAUC,I,MAC9B,GAAe,MAAXA,EAAG9L,KAA8F,MAA/EwS,EAAO9S,MAAM2D,UAAUmP,EAAOa,eAAiB,EAAGb,EAAOa,eAAe,GAAY,CACtG,MAAMoB,EAjPlB,SAA0BlN,EAAoBmN,EAAgCC,GAC1E,IAAIC,EACAC,EAAiB,GAErB,MAAMhD,EAAczG,EAAY,OAAO+D,SAAS,gBAAgBlD,QAC1DsB,EAAcnC,EAAY,MAAM+D,SAAS,sBAAsBlD,QAC/D0B,EAAevC,EAAY,SAC5B+D,SAAS,uBACTtD,iBAAiB,QAAUC,I,QACxB,GAAe,UAAXA,EAAG9L,IAIH,OAHA0U,GAAQE,aAAe,EAAfA,EAAiB5I,QAAQzI,MAAO,IACf,QAAzB,EAAAsO,EAAYiD,qBAAa,SAAEC,YAAYlD,QACvC8C,IAGJ,GAAe,WAAX7I,EAAG9L,IAIH,OAFyB,QAAzB,EAAA6R,EAAYiD,qBAAa,SAAEC,YAAYlD,QACvC8C,IAGJ,GAAIE,IAAmBlH,EAAajO,MAAO,CACvC,MAAMkL,EAAkB,GACxB,IAAK,MAAMvF,KAAUkC,EAASyN,mBAAmBrH,EAAajO,OAAOiB,MAAM,EAAG,IAC1EiK,EAAM5O,KACF,iBAAiBqJ,EAAOnD,wCAAwCmD,EAAOE,mBAG/EgI,EAAY7D,UAAYkB,EAAMrG,KAAK,IAC/BgJ,EAAYU,6BAA6BK,gBACzCsG,EAAkBrH,EAAYU,kBAC9B2G,EAAgBpJ,UAAUC,IAAI,oCAIzCI,iBAAiB,UAAYC,IAC1B+I,EAAiBlH,EAAajO,MACf,cAAXoM,EAAG9L,MAAuB4U,aAAe,EAAfA,EAAiBvG,8BAA8BC,eACzExC,EAAGa,iBACHiI,EAAgBpJ,UAAU1I,OAAO,gCACjC8R,EAAkBA,EAAgBvG,wBAClCuG,EAAgBpJ,UAAUC,IAAI,iCAGnB,YAAXK,EAAG9L,MAAqB4U,aAAe,EAAfA,EAAiBpG,kCAAkCF,eAC3ExC,EAAGa,iBACHiI,EAAgBpJ,UAAU1I,OAAO,gCACjC8R,EAAkBA,EAAgBpG,4BAClCoG,EAAgBpJ,UAAUC,IAAI,sCAJlC,IAQHQ,QAIL,OAFA4F,EAAYhT,YAAY8O,GACxBkE,EAAYhT,YAAY0O,GACjB,CACH/D,QAASqI,EACTnC,MAAO,IAAM/B,EAAa+B,SAuLDuF,CACjB1N,EACChE,IACGiP,EAAO9S,MAAQ8S,EAAO9S,MAAQ,SAAW6D,EAAM,KAEnD,IAAMiP,EAAO9C,SAEG,QAApB,EAAA8C,EAAOsC,qBAAa,SAAEjW,YAAY4V,EAAajL,SAC/CiL,EAAa/E,WAIrB8C,EAAO3G,iBAAiB,QAAUC,IAC1BA,EAAGoJ,eACH7C,EAAOA,OAAOvG,EAAGoJ,cAAgB3R,IAC7BiP,EAAO9S,MAAQ8S,EAAO9S,MAAQ,SAAW6D,EAAM,QAK3DpG,SAAS0O,iBAAiB,OAASC,IACf,SAAZA,EAAG1N,MAAmB0N,EAAGxN,SAAWkU,GAAU1G,EAAGpB,eACjDoB,EAAGa,iBACH0F,EAAOA,OAAOvG,EAAGpB,aAAenH,IAC5BiP,EAAO9S,MAAQ8S,EAAO9S,MAAQ,SAAW6D,EAAM,SAK3DpG,SAAS0O,iBAAiB,QAAUC,IAC5BA,EAAGxN,kBAAkB6W,cAAgBrJ,EAAGxN,OAAO8W,QAAQ,UACvDrC,MAID,CACHP,SACAC,SACA4C,UAAUlT,KACCuQ,GAAUA,EAAQ,KAAOvQ,EAEpC8Q,eACAF,eCrTsB,QAA9B,EAAA5V,SAASmY,eAAe,cAAM,SAAEzW,YC4BzB,SAAa2L,GAChB,MAAMlH,EAAO,IAAI,EACXY,EAAW,IAAIiF,EAAS7F,GACxB+O,EAAS,IAAI9H,EAAOC,GACpB+K,EC9BH,WACH,MAAM7G,EAAKtD,EAAY,OAAO+D,SAAS,iBAAiBlD,QACxD,MAAO,CACHyC,KACA,IAAInQ,EAAiBH,GACjB,MAAMoX,EAAepK,EAAY,OAC5B+D,SAAS,eAAyB,YAAT/Q,EAAqB,wBAA0B,uBACxEwN,UAAUrN,GACV0N,QACLyC,EAAG7P,YAAY2W,GACf7W,WAAW,IAAM+P,EAAGqG,YAAYS,GAAe,ODoBjCC,GAChBhJ,EAAa,IAAIvC,EAAW5G,EAAMoS,GAClCpD,EAAkB,IAAIlL,IACtBoL,EAASJ,EAAO,CAClBC,SACAnO,WACAqD,SAAUjE,EAAKqS,cACfrD,kBACAC,YAAcpQ,GACH8O,EACH,CACI/M,WACAgN,uBACAC,gBAEJhP,KAINyT,EAA+B,CACjC1R,WACAuI,aACAqE,WA+CJ,SAAoBhQ,GAChB,IAAKL,OAAOiU,QAAQ,sCAAwC5T,EAAKyE,WAAa,MAC1E,OAEJjC,EAAKwN,WAAWhQ,GAChB0J,EAAIsG,WAAWhQ,GACVwI,KAAMjE,IACCA,EAAOwQ,QACPN,EAAc9J,IAAI,UAAW,WAE7B8J,EAAc9J,IAAI,UAAW,WAGpCqK,MAAOxV,IACJC,QAAQ3C,MAAM0C,GACdiV,EAAc9J,IAAI,UAAW,WAErCgB,EAAWG,QAAQ,MA/DnBsE,uBACAC,gBAEE4E,EAAWpE,EAASiE,GACpBI,EA7CH,SAA6BvF,GAChC,MAAMoB,EAAczG,EAAY,OAAO+D,SAAS,cAAclD,QAC9D,MAAO,CACH4F,cACA,OAAO1K,GACHmF,EACIuF,EACA1F,EAAWhF,EAAM1B,IAAK3E,GAAS6Q,EAASlB,EAAO,CAAE3P,OAAMlB,KAAM,UAAWiS,iBAsCxDoE,CAAoBL,GAC1CM,EAAU7I,EAAQZ,EAAY,IAEpC,SAASyE,EAAqB/O,EAAcqH,GACxC8I,EAAgB5K,IAAIvF,EAAOqH,GAG/B,SAAS2H,EAAahP,EAAc2J,GAChC,GAAIA,EAAGxN,kBAAkB4P,mBAAqBsE,EAAO6C,UAAUlT,GAC3D,OAEJ,GAAI2J,EAAGxN,kBAAkB6X,kBAAuC,aAAnBrK,EAAGxN,OAAOF,KAEnD,YADA+D,EAAMiU,YAAYtK,EAAGxN,OAAO6E,SAGhC2I,EAAGa,iBAEHb,EAAGuK,kBACH,MAAMC,EEjFP,SAA4BlO,EAAWmO,GAC1C,GAAIpZ,SAASqZ,uBAAwB,CACjC,MAAMF,EAAMnZ,SAASqZ,uBAAuBpO,EAAGmO,GAC/C,GAAID,EACA,MAAO,CAACA,EAAIG,WAAYH,EAAII,aAE7B,GAAIvZ,SAASwZ,oBAAqB,CACrC,MAAMC,EAAQzZ,SAASwZ,oBAAoBvO,EAAGmO,GAC9C,MAAO,CAACK,EAAMC,eAAgBD,EAAME,cFyExBC,CAAmBjL,EAAGkL,QAASlL,EAAGmL,SAC9C,IAAI/D,GAAY,EACZoD,IACApD,EExEL,SAAuBgE,EAAYR,EAAgBxS,GACtD,MAAMiT,EAAcD,EAAKE,YAEzB,IAAKD,GAAsC,IAAvBA,EAAYzb,OAE5B,OAAO,EAGX,GAAyB,OAArBwb,EAAK9I,aAAwBsI,IAAWS,EAAYzb,OAIpD,OAAOwI,EAASxI,OAIpB,MAAM2b,EAAY,GAClB,IAAIC,EAAepT,EAASa,QAAQoS,EAAa,GACjD,KAAOG,GAAgB,GACnBD,EAAUrb,KAAKsb,GACfA,EAAepT,EAASa,QAAQoS,EAAaG,EAAeH,EAAYzb,QAI5E,GAAyB,IAArB2b,EAAU3b,OACV,OAAO2b,EAAU,GAAKX,EACnB,CAIH,MAAM/T,EAAmB,GACzB,IAAIH,EAAO0U,EAAKK,gBAChB,KAAO/U,GAICA,aAAgB0L,mBAChBvL,EAAO3G,KAAKwG,EAAKgV,aAAa,SAAW,IAE7C7U,EAAO3G,KAAKwG,EAAK4U,aAAe,IAChC5U,EAAOA,EAAK+U,gBAIhB,IAAIE,EAAY,EAChB,IAAK,MAAMnS,KAAO3C,EACd8U,EAAYvT,EAASa,QAAQO,EAAKmS,GAAanS,EAAI5J,OAGvD,IAAK,MAAMwX,KAAYmE,EACnB,GAAInE,GAAYuE,EACZ,OAAOvE,EAAWwD,EAI1B,OAAOxS,EAASxI,QFiBDgc,CAAcpB,EAAI,GAAIA,EAAI,GAAInU,EAAMpB,UAEnDyR,EAAOS,aAAa9Q,EAAO+Q,GAuC/B,MAAMyE,EAA2B,IAAIC,IACrC,IAAIC,EACJ,SAASnC,EAAS5U,GAQd,GAPA+W,EAAc/W,EACdiV,EAAS1G,OAAO,CAAEvO,OAAMlB,KAAM,UACzB+X,EAAyBtP,IAAIvH,KAC9B6W,EAAyBlM,IAAI3K,GAC7BA,EAAKyO,kBAAkB,IA3C/B,SAAkBzO,GACd0J,EAAIsN,SAAShX,GACRwI,KAAMjE,IACCA,EAAOwQ,SACPvS,EAAK+L,OAAOvO,GACZyU,EAAc9J,IAAI,UAAW,YAE7B8J,EAAc9J,IAAI,UAAW,WAGpCqK,MAAOxV,IACJC,QAAQ3C,MAAM0C,GACdiV,EAAc9J,IAAI,UAAW,WA+BJqM,CAAShX,KAG9B,KADAL,OAAOsX,SAASC,SAAS3U,UAAU,GAC/B,CACZ,MAAM4U,EAAkB,GAClB/U,EAAM,EACZ,IAAIX,EAAUzB,EAAK0B,KAAKc,GACxB,KAAOf,GAAW0V,EAAgBvc,QAAUwH,GACxC+U,EAAgBjc,KAAKuG,GACrBA,EAAUA,EAAQC,KAAKc,GAE3B0S,EAAoB3G,OAAO4I,QAE3BjC,EAAoB3G,OAAO,IA+CnC,OA1CA5O,OAAOyX,WAAcxb,IACjBgZ,EAASpS,EAAKwC,QAAQpJ,EAAEyb,MAAM5U,OAGlCpG,SAAS0O,iBAAiB,UAAYC,IAC7B+L,IAGU,MAAX/L,EAAG9L,KAAe8L,EAAGmE,UACrBnE,EAAGa,iBACHkL,EAAYO,OACZrC,EAAS1G,OAAO,CAACvO,KAAM+W,EAAajY,KAAM,WAE/B,MAAXkM,EAAG9L,KAAe8L,EAAGmE,UACrBnE,EAAGa,iBACHkL,EAAYQ,OACZtC,EAAS1G,OAAO,CAACvO,KAAM+W,EAAajY,KAAM,cAIlDzC,SAAS0O,iBAAiB,QAAUnP,IAChC,GAAIA,EAAE4B,kBAAkB4P,mBAAqBxR,EAAE4B,OAAOkN,UAAU8M,SAAS,cAAgB5b,EAAEuT,QAAS,CAChG,MAAMvD,EAAOhQ,EAAE4B,OAAOkZ,aAAa,QAC/B9K,IACAhQ,EAAEiQ,iBACFF,EAAWG,QAAQF,OAK/BlC,EAAI+N,YAAYjP,KAAMnC,IAClB,IAAK,MAAMZ,KAAQY,EACf7D,EAAKkV,QAAQjS,EAAKhD,IAAKgD,EAAKrC,UAEhC,MAAMX,EAAM9C,OAAOsX,SAASC,SAAS3U,UAAU,GAE/CqS,EADapS,EAAKwC,QAAQvC,IAE1B2S,EAAQ7G,OAAO/L,EAAK2D,cAGxB3D,EAAKmV,SAAS,IAAMvC,EAAQ7G,OAAO/L,EAAK2D,aAEjCkF,EAAW,CACd+J,EAAQxH,GACRtD,EAAY,QAAQ2D,aAAa,CAACgH,EAASlE,YAAamE,EAAoBnE,cAAc5F,QAC1FsJ,EAAc7G,GACd8D,EAAOC,SDhM6BiG,CAAI,IIQzC,MAEH,YAAYnV,GACRrC,KAAKqC,IAAMA,EAGf,YACI,OAAOoV,MAAMzX,KAAKqC,IAAM,UACnB+F,KAAM/J,GAAMA,EAAEqZ,QACdtP,KAAMsP,GAA6BA,EAAKzd,MAGjD,SAAS2F,GACL,OAAO6X,MAAMzX,KAAKqC,IAAM,UAAYzC,EAAKoB,SAAU,CAC/C2W,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBrJ,KAAMsJ,KAAKC,UAAU,CACjBzV,IAAKzC,EAAKoB,SACVgC,SAAUpD,EAAKmD,iBAGlBqF,KAAM2P,GAAQA,EAAIL,QAClBtP,KAAMsP,GAAqBA,GAGpC,WAAW9X,GACP,OAAO6X,MAAMzX,KAAKqC,IAAM,UAAYzC,EAAKoB,SAAU,CAC/C2W,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGnBxP,KAAM2P,GAAQA,EAAIL,QAClBtP,KAAMsP,GAAuBA,GAGtC,WAAW7N,GACP,MAAMmO,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,OAAQrO,GACjB4N,MAAMzX,KAAKqC,IAAM,SAAU,CAC9BsV,OAAQ,OACRpJ,KAAMyJ,IAEL5P,KAAM2P,GAAkBA,EAAIL,QAC5BtP,KAAMsP,GAAiCA,EAAKzd,QJtDoC,QAAtC,EAACsF,OAAOgN,aAAaC,QAAQ,iBAAS,QAAI,MAI7F,kBAAmB2L,WACnB5Y,OAAOoL,iBAAiB,OAAQ,KAC5BwN,UAAUC,cAAcC,SAAS,qBAAqBjQ","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { Page, InternalLink } from './Page';\n\nexport type BlockId = string;\n\nexport class Block {\n    public readonly id: BlockId;\n    public readonly page: Page;\n    public _content: string = '';\n    public level: number;\n    public prev?: Block;\n    public next?: Block;\n\n    public constructor(page: Page, content: string, level: number) {\n        this.page = page;\n        this._content = content.trim();\n        this.level = level;\n        this.id = (Date.now() + Math.round(Math.random() * 1e9)).toString();\n    }\n\n    set content(value: string) {\n        if (value !== this._content) {\n            this._content = value;\n            this.page.onBlockChange();\n        }\n    }\n\n    get content(): string {\n        return this._content;\n    }\n\n    public internalLinks(): InternalLink[] {\n        const links = [];\n        const matches = this.content.matchAll(/\\[([^\\]]*)\\]\\(\\.\\/([^\\)]+)\\)/g);\n        for (const [, linkText, to] of matches) {\n            links.push({\n                from: this.page.getUri(),\n                to,\n                linkText,\n                block: this,\n            });\n        }\n        return links;\n    }\n\n    public parents(): Block[] {\n        const parents: Block[] = [];\n        let parent = this.parent();\n        while (parent) {\n            parents.unshift(parent);\n            parent = parent.parent();\n        }\n        return parents;\n    }\n\n    public parent(): Block | undefined {\n        let current = this.prev;\n        while (current && current.level >= this.level) {\n            current = current.prev;\n        }\n        return current;\n    }\n\n    public children(): Block[] {\n        const children: Block[] = [];\n        let current = this.next;\n        while (current && current.level > this.level) {\n            children.push(current);\n            current = current.next;\n        }\n        return children;\n    }\n\n    public isEmpty(): boolean {\n        return this.content.length < 1;\n    }\n\n    /**\n     * Returns the new block, which contains the `after` content\n     */\n    public split(before: string, after: string): Block {\n        this.content = before;\n        const newBlock = new Block(this.page, after, this.level);\n        newBlock.prev = this;\n        if (this.next) {\n            this.next.prev = newBlock;\n            newBlock.next = this.next;\n        }\n        this.next = newBlock;\n        return newBlock;\n    }\n\n    /**\n     * Returns the removed block\n     */\n    public mergeWithPrev(): Block | undefined {\n        if (this.prev) {\n            this.prev.content = this.prev.content + this.content;\n            return this.remove();\n        }\n    }\n\n    /**\n     * Returns the removed block\n     */\n    public mergeWithNext(): Block | undefined {\n        if (this.next) {\n            this.content = this.content + this.next.content;\n            return this.next.remove();\n        }\n    }\n\n    /**\n     * Returns the new level\n     */\n    public changeLevel(change: number): number {\n        if (this.prev) {\n            const oldLevel = this.level;\n            this.level = Math.min(10, this.prev.level + 1, Math.max(0, this.level + change));\n            if (this.level !== oldLevel) {\n                this.page.onBlockChange();\n            }\n        }\n        return this.level;\n    }\n\n    public remove(): Block {\n        if (this.prev) {\n            this.prev.next = this.next;\n        }\n        if (this.next) {\n            this.next.prev = this.prev;\n        }\n        this.page.onBlockChange();\n        return this;\n    }\n\n    public setCheckbox(checked: boolean): void {\n        if (this.content.startsWith('[]') && checked === true) {\n            this.content = '[x]' + this.content.substring(2);\n        } else if (this.content.startsWith('[x]') && checked === false) {\n            this.content = '[]' + this.content.substring(3);\n        }\n    }\n}\n","import { Wiki } from './Wiki';\nimport { Block } from './Block';\n\ntype PageUri = string;\n\nexport interface InternalLink {\n    from: PageUri;\n    to: PageUri;\n    linkText: string;\n    block: Block;\n}\n\nexport interface SearchMatch {\n    before: string;\n    match: string;\n    after: string;\n}\n\nexport interface SearchMatches {\n    score: number;\n    matches: SearchMatch[];\n}\n\nexport class Page {\n    private uri: string;\n    private title: string;\n    private firstBlock: Block;\n\n    constructor(private readonly wiki: Wiki, uri: string, title: string, content: string, public exists: boolean) {\n        this.uri = uri;\n        this.title = decodeURI(title);\n        this.firstBlock = this.parseContentToBlocks(content) ?? new Block(this, '', 0);\n        this.undoStack.push(this.toMarkdown());\n    }\n\n    public static fromMarkdown(wiki: Wiki, uri: string, markdown: string): Page {\n        const [title, content] = Page.splitMarkdown(markdown);\n        return new Page(wiki, uri, title, content, true);\n    }\n\n    private static splitMarkdown(markdown: string): [string, string] {\n        const lines = markdown.split('\\n');\n        lines.shift();\n        const title = (lines.shift() ?? '').substring('title: '.length).replace(/^\"(.*)\"$/, '$1');\n        lines.shift();\n        while (lines[0] === '') {\n            lines.shift();\n        }\n        return [title, lines.join('\\n')];\n    }\n\n    public getTitle(): string {\n        return this.title;\n    }\n\n    public setTitle(newTitle: string): void {\n        if (newTitle !== this.title) {\n            this.title = newTitle;\n            this.scheduleChangeListenerCall();\n        }\n    }\n\n    public setMarkdown(markdown: string): void {\n        const [title, content] = Page.splitMarkdown(markdown);\n        if (!this.isDate()) {\n            this.title = title;\n        }\n        this.firstBlock = this.parseContentToBlocks(content) ?? new Block(this, '', 0);\n        this.scheduleChangeListenerCall();\n    }\n\n    public getUri(): string {\n        return this.uri;\n    }\n\n    public getBacklinks(): InternalLink[] {\n        return this.wiki.getAllLinksTo(this);\n    }\n\n    public matches(query: string): SearchMatches {\n        let score = this.title.toLowerCase().indexOf(query.toLowerCase()) >= 0 ? 100 : 0;\n        const context = 20;\n        const matches: SearchMatch[] = [];\n        for (const block of this.blocksInOrder()) {\n            const content = block.content;\n            let idx = content.toLowerCase().indexOf(query.toLowerCase());\n            while (idx >= 0) {\n                score += 1;\n                matches.push({\n                    before: content.substring(Math.max(0, idx - context), idx),\n                    match: content.substring(idx, idx + query.length),\n                    after: content.substring(idx + query.length, idx + query.length + context),\n                });\n                idx = content.toLowerCase().indexOf(query.toLowerCase(), idx + 1);\n            }\n        }\n        return { score, matches };\n    }\n\n    public links(): InternalLink[] {\n        return this.blocksInOrder().flatMap((block) => block.internalLinks());\n    }\n\n    public blocksInOrder(): Block[] {\n        const result = [];\n        let cur: Block | undefined = this.firstBlock;\n        while (cur) {\n            result.push(cur);\n            cur = cur.next;\n        }\n        return result;\n    }\n\n    public toMarkdown(): string {\n        const content: string[] = ['---', 'title: \"' + this.getTitle().trim() + '\"', '...', ''];\n        for (const block of this.blocksInOrder()) {\n            const lines = block.content.split('\\n');\n            content.push(' '.repeat(block.level * 4) + '* ' + lines.shift());\n            content.push(...lines.map((line) => ' '.repeat(block.level * 4 + 2) + line));\n        }\n        content.push('');\n        return content.join('\\n');\n    }\n\n    public isDate(): boolean {\n        return this.title.match(/\\d{4}-\\d{2}-\\d{2}/) !== null;\n    }\n\n    public prev(wiki: Wiki): Page | undefined {\n        if (this.isDate()) {\n            const date = new Date(this.title);\n            date.setDate(date.getDate() - 1);\n            return wiki.getPage(date.toISOString().substring(0, 10));\n        }\n    }\n\n    public onBlockChange(): void {\n        this.scheduleChangeListenerCall();\n    }\n\n    private saving = false;\n    private scheduleChangeListenerCall(): void {\n        this.saving = true;\n        setTimeout(() => {\n            if (this.saving) {\n                this.saving = false;\n                this.callChangeListeners();\n            }\n        }, 0);\n    }\n\n    public addChangeListener(listener: () => void): void {\n        this.changeListeners.push(listener);\n    }\n\n    public removeChangeListener(listener: () => void): void {\n        this.changeListeners.splice(this.changeListeners.indexOf(listener), 1);\n    }\n\n    private undoStack: string[] = [];\n    private redoStack: string[] = [];\n    private changeListeners: (() => void)[] = [];\n    private callChangeListeners(): void {\n        for (const listener of this.changeListeners) {\n            listener();\n        }\n        this.pushUnique(this.undoStack, this.toMarkdown());\n    }\n\n    public undo(): void {\n        const current = this.undoStack.pop();\n        if (!current) {\n            return;\n        }\n        this.pushUnique(this.redoStack, current);\n        const prev = this.undoStack.pop();\n        if (prev) {\n            this.setMarkdown(prev);\n        } else {\n            this.redoStack.pop();\n            this.undoStack.push(current);\n        }\n    }\n\n    private pushUnique<T>(stack: T[], item: T): void {\n        if (stack[stack.length - 1] !== item) {\n            stack.push(item);\n        }\n    }\n\n    public redo(): void {\n        const next = this.redoStack.pop();\n        if (next) {\n            this.pushUnique(this.undoStack, next);\n            this.setMarkdown(next);\n        }\n    }\n\n    private parseContentToBlocks(pageContent: string): Block | undefined {\n        const lines = pageContent.split('\\n');\n        const regex = new RegExp(/^( *)\\* (.*)$/);\n        let firstBlock: Block | undefined;\n        let lastBlock: Block | undefined;\n        const indentations: number[] = [];\n        const content: string[] = [];\n        // Remove empty lines between frontmatter and first block\n        while (lines[0] === '') {\n            lines.shift();\n        }\n\n        const finalize = (): void => {\n            if (content.length < 1) {\n                return;\n            }\n            const newBlock = new Block(this, content.join('\\n'), Math.max(0, indentations.length - 1));\n            content.splice(0);\n            if (!firstBlock) {\n                firstBlock = newBlock;\n            }\n            if (lastBlock) {\n                lastBlock.next = newBlock;\n                newBlock.prev = lastBlock;\n            }\n            lastBlock = newBlock;\n        };\n\n        for (const line of lines) {\n            const match = line.match(regex);\n            if (match) {\n                finalize();\n                const indentation = match[1].length;\n                while (indentations[indentations.length - 1] >= indentation) {\n                    indentations.pop();\n                }\n                indentations.push(indentation);\n            }\n            content.push(line.substr(indentations[indentations.length - 1] + 2));\n        }\n        finalize();\n        return firstBlock;\n    }\n}\n","import { Page, InternalLink } from './Page';\n\nexport class PageList {\n    constructor(private readonly wiki: Wiki) {}\n\n    public filterPagesByTitle(query: string): Page[] {\n        return this.wiki.getPages().filter((page) => page.getTitle().toLowerCase().indexOf(query.toLowerCase()) >= 0);\n    }\n}\n\nexport class Wiki {\n    private readonly pages: Map<string, Page> = new Map();\n    private readonly linksByFrom: Map<string, InternalLink[]> = new Map();\n    private readonly linksByTo: Map<string, InternalLink[]> = new Map();\n    private readonly pageList = new PageList(this);\n\n    public addPage(uri: string, markdown: string): void {\n        const page = Page.fromMarkdown(this, uri, markdown);\n        this.pages.set(uri, page);\n        this.storeAllLinksOnPage(page);\n    }\n\n    private onChangeListeners: (() => void)[] = [];\n    private callOnChange(): void {\n        for (const listener of this.onChangeListeners) {\n            listener();\n        }\n    }\n\n    public onChange(listener: () => void): void {\n        this.onChangeListeners.push(listener);\n    }\n\n    public getPage(uri: string): Page {\n        if (uri === '' || uri === '/') {\n            uri = new Date().toISOString().substring(0, 10);\n        }\n        const page = this.pages.get(uri);\n        if (page) {\n            return page;\n        }\n        return new Page(this, uri, uri, '', false);\n    }\n\n    public getPages(): Page[] {\n        return [...this.pages.values()];\n    }\n\n    public getPageList(): PageList {\n        return this.pageList;\n    }\n\n    public deletePage(page: Page): void {\n        this.pages.delete(page.getUri());\n        this.removeAllStoredLinksFromPage(page);\n        this.callOnChange();\n    }\n\n    public getAllLinksTo(page: Page): InternalLink[] {\n        return (\n            this.linksByTo.get(page.getUri())?.map((link) => {\n                if (!link.linkText) {\n                    const targetPage = this.pages.get(link.from);\n                    if (targetPage) {\n                        return { ...link, linkText: targetPage.getTitle() };\n                    } else {\n                        return { ...link, linkText: link.from };\n                    }\n                }\n                return link;\n            }) ?? []\n        );\n    }\n\n    private storeAllLinksOnPage(page: Page): void {\n        for (const link of page.links()) {\n            const storedFrom = this.linksByFrom.get(link.from);\n            if (storedFrom) {\n                storedFrom.push(link);\n            } else {\n                this.linksByFrom.set(link.from, [link]);\n            }\n            const storedTo = this.linksByTo.get(link.to);\n            if (storedTo) {\n                storedTo.push(link);\n            } else {\n                this.linksByTo.set(link.to, [link]);\n            }\n        }\n    }\n\n    private removeAllStoredLinksFromPage(page: Page): void {\n        for (const link of this.linksByFrom.get(page.getUri()) ?? []) {\n            const storedTo = this.linksByTo.get(link.to);\n            if (storedTo) {\n                this.linksByTo.set(\n                    link.to,\n                    storedTo.filter((x) => x !== link),\n                );\n            }\n        }\n        this.linksByFrom.delete(page.getUri());\n    }\n\n    public update(page: Page): void {\n        if (this.pages.has(page.getUri())) {\n            return;\n        }\n        page.exists = true;\n        this.pages.set(page.getUri(), page);\n        this.removeAllStoredLinksFromPage(page);\n        this.storeAllLinksOnPage(page);\n        this.callOnChange();\n    }\n}\n","import { Wiki } from './Model/Wiki';\n\nconst singleTokens: { [key: string]: [string, string] } = {\n    _: ['<emph>', '</emph>'],\n    '`': ['<code>', '</code>'],\n    '*': ['<strong>', '</strong>'],\n    '~': ['<strike>', '</strike>'],\n};\n\ninterface StackEntry {\n    token: string;\n    content: string;\n}\n\nfunction takeUntil(markdown: string, until: string, idx: number): [string, number] {\n    const endIdx = markdown.indexOf(until, idx);\n    const take = markdown.substring(idx, endIdx < 0 ? undefined : endIdx);\n    return [take, endIdx < 0 ? markdown.length : endIdx + until.length];\n}\n\nfunction buildLinkTag(target: string, title: string, wiki: Wiki): string {\n    let attributes = '';\n    let renderMarkdown = true;\n    if (target.substring(0, 2) === './') {\n        const page = wiki.getPage(target.substring(2));\n        if (page.exists) {\n            attributes = ' class=\"internal\" ';\n            if (title.trim().length < 1) {\n                title = page.getTitle();\n                renderMarkdown = false;\n            }\n        } else {\n            attributes = ' class=\"internal missing\" ';\n        }\n    } else {\n        attributes = ' target=\"_blank\" rel=\"noopener noreferrer\" class=\"external\" ';\n    }\n    if (title.trim().length < 1) {\n        title = target;\n    } else if (renderMarkdown) {\n        title = renderInline(title);\n    }\n    return `<a${attributes}href=\"${target}\">${title}</a>`;\n}\n\nfunction renderInline(markdown: string): string {\n    let idx = 0;\n    const stack: StackEntry[] = [];\n    let result = '';\n    while (idx < markdown.length) {\n        const current = markdown[idx];\n        const peeked: StackEntry | undefined = stack[stack.length - 1];\n        const peekedBelow: StackEntry | undefined = stack[stack.length - 2];\n        const singleTokenTags = singleTokens[current];\n        if (singleTokenTags) {\n            if (peeked && peeked.token === current) {\n                if (peekedBelow) {\n                    peekedBelow.content += singleTokenTags[0] + peeked.content + singleTokenTags[1];\n                } else {\n                    result += singleTokenTags[0] + peeked.content + singleTokenTags[1];\n                }\n                stack.pop();\n            } else {\n                stack.push({ token: current, content: '' });\n            }\n            idx++;\n            continue;\n        }\n\n        if (peeked) {\n            peeked.content += current;\n        } else {\n            result += current;\n        }\n\n        idx++;\n    }\n\n    if (result.length < 1 && markdown.length >= 1) {\n        return markdown;\n    }\n\n    if (stack.length > 0) {\n        // Something is unbalanced. Just return unformatted string.\n        return markdown;\n    }\n\n    return result;\n}\n\nexport default class Markdown {\n    public mathRenderFunction = (raw: string): string => raw;\n    public constructor(private readonly wiki: Wiki) {\n        import('katex').then((exports) => {\n            this.mathRenderFunction = exports.renderToString;\n            for (const element of document.getElementsByClassName('math')) {\n                element.innerHTML = exports.renderToString(element.innerHTML);\n            }\n        });\n    }\n\n    public render(markdown: string): string {\n        let idx = 0;\n        const stack: StackEntry[] = [];\n        let result = '';\n        let quote = false;\n\n        if (markdown.startsWith('> ')) {\n            idx = 2;\n            quote = true;\n        } else if (markdown.startsWith('[] ')) {\n            idx = 3;\n            result = '<input type=\"checkbox\">';\n        } else if (markdown.startsWith('[x] ')) {\n            idx = 3;\n            result = '<input type=\"checkbox\" checked>';\n        }\n\n        while (idx < markdown.length) {\n            const prev = markdown[idx-1];\n            const current = markdown[idx];\n            const next = markdown[idx+1];\n            const peeked: StackEntry | undefined = stack[stack.length - 1];\n            const peekedBelow: StackEntry | undefined = stack[stack.length - 2];\n\n            let html;\n            if (markdown.startsWith('![', idx)) {\n                const [title, titleEndIdx] = takeUntil(markdown, '](', idx + 2);\n                const [target, targetEndIdx] = takeUntil(markdown, ')', titleEndIdx);\n                idx = targetEndIdx;\n                html = `<img src=\"${target}\" alt=\"${title || target}\">`;\n            } else if (markdown.startsWith('[', idx)) {\n                const [title, titleEndIdx] = takeUntil(markdown, '](', idx + 1);\n                const [target, targetEndIdx] = takeUntil(markdown, ')', titleEndIdx);\n                idx = targetEndIdx;\n                html = buildLinkTag(target, title, this.wiki);\n            } else if (markdown.startsWith('$$', idx)) {\n                const [math, endIdx] = takeUntil(markdown, '$$', idx + 2);\n                idx = endIdx;\n                html = `<span class=\"math\">${this.mathRenderFunction(math)}</span>`;\n            } else if (markdown.startsWith('http://', idx) || markdown.startsWith('https://', idx)) {\n                const [url, endIdx] = takeUntil(markdown, ' ', idx);\n                idx = endIdx === markdown.length ? endIdx : endIdx - 1;\n                html = buildLinkTag(url, url, this.wiki);\n            }\n\n            if (html) {\n                if (peeked) {\n                    peeked.content += html;\n                } else {\n                    result += html;\n                }\n                continue;\n            }\n\n            const singleTokenTags = singleTokens[current];\n            if (singleTokenTags) {\n                if (peeked && peeked.token === current) {\n                    if (peekedBelow) {\n                        peekedBelow.content += singleTokenTags[0] + peeked.content + singleTokenTags[1];\n                    } else {\n                        result += singleTokenTags[0] + peeked.content + singleTokenTags[1];\n                    }\n                    stack.pop();\n                } else if (prev === ' ' || prev === undefined) {\n                    stack.push({ token: current, content: '' });\n                } else {\n                    if (peeked) {\n                        peeked.content += current;\n                    } else {\n                        result += current;\n                    }\n                }\n                idx++;\n                continue;\n            }\n\n            if (peeked) {\n                peeked.content += current;\n            } else {\n                result += current;\n            }\n\n            idx++;\n        }\n\n        for (const stackItem of stack) {\n            result += stackItem.token + stackItem.content;\n        }\n\n        if (result.length < 1 && markdown.length >= 1) {\n            return markdown;\n        }\n\n        result = result.replace(/\\n/g, '<br>');\n\n        if (quote) {\n            return '<blockquote>' + result + '</blockquote>';\n        }\n        return result;\n    }\n}\n","import { Wiki } from './Model/Wiki';\nimport { Page } from './Model/Page';\n\nexport default class Navigation {\n    public constructor(private readonly wiki: Wiki, private readonly changePage: (page: Page) => void) {}\n\n    public goToUri(uri: string): void {\n        if (uri.startsWith('./')) {\n            uri = uri.substring(2);\n        }\n        const newPage = this.wiki.getPage(uri);\n        history.pushState({ uri: newPage.getUri() }, newPage.getTitle(), uri === '/' ? '/' : newPage.getUri());\n        this.changePage(newPage);\n    }\n}\n","import { Api } from './Api';\n\nexport default class Upload {\n    private readonly allowedMimeTypes = ['image/png', 'image/jpeg', 'application/pdf'];\n    constructor(private readonly api: Api) {}\n\n    public upload(dataTransfer: DataTransfer, callback: (uri: string) => void): void {\n        for (const item of dataTransfer.items ?? []) {\n            if (item.kind === 'file' && this.allowedMimeTypes.includes(item.type)) {\n                const file = item.getAsFile();\n                if (file) {\n                    this.api.uploadFile(file).then((uploadedFile) => callback(uploadedFile.filename));\n                }\n            }\n        }\n    }\n}\n","import Navigation from './Navigation';\n\nexport interface HTMLBuilder<T extends HTMLElement> {\n    addClass: (...classNames: (string | undefined | null | boolean)[]) => HTMLBuilder<T>;\n    setAttribute: (key: string, value: string | number) => HTMLBuilder<T>;\n    appendChild: (child: Node) => HTMLBuilder<T>;\n    withChildren: (children: (Node | undefined)[]) => HTMLBuilder<T>;\n    innerHTML: (html: string) => HTMLBuilder<T>;\n    innerText: (text: string) => HTMLBuilder<T>;\n    addEventListener: <E extends keyof HTMLElementEventMap>(\n        type: E,\n        listener: (ev: HTMLElementEventMap[E], el: T) => void,\n    ) => HTMLBuilder<T>;\n    apply: (fn: (t: T) => void) => HTMLBuilder<T>;\n    data: (key: string, value: string) => HTMLBuilder<T>;\n    build: () => T;\n}\n\nfunction internalBuilder<E extends HTMLElement>(element: E): HTMLBuilder<E> {\n    const internalElement = element;\n    return {\n        addClass(...classNames): HTMLBuilder<E> {\n            for (const name of classNames) {\n                if (typeof name === 'string' && name !== '') {\n                    internalElement.classList.add(name);\n                }\n            }\n            return this;\n        },\n        setAttribute(key, value): HTMLBuilder<E> {\n            internalElement.setAttribute(key, value.toString());\n            return this;\n        },\n        appendChild(child): HTMLBuilder<E> {\n            internalElement.appendChild(child);\n            return this;\n        },\n        withChildren(children): HTMLBuilder<E> {\n            for (const child of children) {\n                if (child) {\n                    internalElement.appendChild(child);\n                }\n            }\n            return this;\n        },\n        innerHTML(html): HTMLBuilder<E> {\n            internalElement.innerHTML = html;\n            return this;\n        },\n        innerText(text): HTMLBuilder<E> {\n            internalElement.innerText = text;\n            return this;\n        },\n        addEventListener(type, listener): HTMLBuilder<E> {\n            internalElement.addEventListener(type, (ev) => listener(ev, internalElement));\n            return this;\n        },\n        apply(fn): HTMLBuilder<E> {\n            fn(internalElement);\n            return this;\n        },\n        data(key, value): HTMLBuilder<E> {\n            internalElement.dataset[key] = value;\n            return this;\n        },\n        build(): E {\n            return internalElement;\n        },\n    };\n}\n\nexport function htmlBuilder<T extends keyof HTMLElementTagNameMap>(tag: T): HTMLBuilder<HTMLElementTagNameMap[T]> {\n    const element: HTMLElementTagNameMap[T] = document.createElement(tag);\n    return internalBuilder(element);\n}\nexport function fragmentOf(children: Node[]): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    for (const child of children) {\n        fragment.appendChild(child);\n    }\n    return fragment;\n}\nexport function replaceContent(parent: HTMLElement, replacement: Node): void {\n    parent.innerHTML = '';\n    parent.appendChild(replacement);\n}\nexport function internalLinkBuilder(navigation: Navigation, href: string): HTMLBuilder<HTMLAnchorElement> {\n    return htmlBuilder('a')\n        .setAttribute('href', href)\n        .addEventListener('click', (ev) => {\n            ev.preventDefault();\n            navigation.goToUri(href);\n        });\n}\n","// https://github.com/tabler/tabler-icons/blob/master/icons/home.svg\n// MIT (c) 2020 Paweł Kuna\nexport default {\n    chevronLeft: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-chevron-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n    <polyline points=\"15 6 9 12 15 18\" />\n    </svg>`,\n    chevronRight: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-chevron-right\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n    <polyline points=\"9 6 15 12 9 18\" />\n    </svg>`,\n    dotsVertical: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-dots-vertical\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"1\" />\n    <circle cx=\"12\" cy=\"19\" r=\"1\" />\n    <circle cx=\"12\" cy=\"5\" r=\"1\" />\n  </svg>`,\n    home: `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-home\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n      <polyline points=\"5 12 3 12 12 3 21 12 19 12\" />\n      <path d=\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\" />\n      <path d=\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\" />\n  </svg>\n  `,\n};\n","import { Page, SearchMatches } from '../Model/Page';\nimport Navigation from '../Navigation';\nimport Icons from './Icons';\nimport { htmlBuilder, replaceContent, fragmentOf, internalLinkBuilder } from '../html';\n\ntype PageWithMatches = [Page, SearchMatches];\n\nfunction comparePagesWithMatches(a: PageWithMatches, b: PageWithMatches): number {\n    if (a[1].score === b[1].score) {\n        if (a[0].isDate() && b[0].isDate()) {\n            return b[0].getTitle().localeCompare(a[0].getTitle());\n        }\n        if (a[0].isDate() || b[0].isDate()) {\n            return b[0].isDate() ? (a[0].isDate() ? 0 : 1) : -1;\n        }\n        return a[0].getTitle().localeCompare(b[0].getTitle());\n    } else {\n        return b[1].score - a[1].score;\n    }\n}\n\nfunction makeResultItemElement(navigation: Navigation, [page, matches]: PageWithMatches): HTMLLIElement {\n    return htmlBuilder('li')\n        .appendChild(\n            internalLinkBuilder(navigation, page.getUri())\n                .withChildren([\n                    htmlBuilder('span').innerText(page.getTitle()).build(),\n                    ...matches.matches.map((match) =>\n                        htmlBuilder('span')\n                            .withChildren([\n                                document.createTextNode(match.before),\n                                htmlBuilder('b').innerText(match.match).build(),\n                                document.createTextNode(match.after),\n                            ])\n                            .build(),\n                    ),\n                ])\n                .build(),\n        )\n        .build();\n}\n\nfunction makeFallbackResult(navigation: Navigation, query: string): HTMLLIElement {\n    return htmlBuilder('li')\n        .addClass('create')\n        .appendChild(\n            internalLinkBuilder(navigation, query)\n                .innerText('Create page \"' + query + '\"')\n                .build(),\n        )\n        .build();\n}\n\nfunction makeInputElement(\n    search: (query: string) => void,\n    withSelected: (fn: (selected: HTMLElement) => void) => void,\n    select: (newSelection: HTMLLIElement) => void,\n    initialValue: string,\n): HTMLInputElement {\n    const inputElement = document.createElement('input');\n    inputElement.value = initialValue;\n    inputElement.setAttribute('type', 'search');\n    inputElement.setAttribute('placeholder', 'Search');\n    inputElement.addEventListener('input', () => {\n        search(inputElement.value);\n    });\n    inputElement.addEventListener('keydown', (ev) => {\n        if (ev.key === 'Escape') {\n            inputElement.value = '';\n            search('');\n        } else {\n            withSelected((selected) => {\n                const firstChild = selected?.firstElementChild;\n                if (ev.key === 'Enter' && firstChild instanceof HTMLAnchorElement) {\n                    ev.preventDefault();\n                    firstChild.click();\n                } else if (ev.key === 'ArrowDown') {\n                    ev.preventDefault();\n                    const nextSibling = selected.nextElementSibling;\n                    if (nextSibling instanceof HTMLLIElement) {\n                        select(nextSibling);\n                    }\n                } else if (ev.key === 'ArrowUp') {\n                    ev.preventDefault();\n                    const prevSibling = selected.previousElementSibling;\n                    if (prevSibling instanceof HTMLLIElement) {\n                        select(prevSibling);\n                    }\n                }\n            });\n        }\n    });\n    return inputElement;\n}\n\nexport interface Sidebar {\n    el: HTMLElement;\n    update: (pages: Page[]) => void;\n}\nexport function Sidebar(navigation: Navigation, initialPages: Page[]): Sidebar {\n    const listElement = document.createElement('ul');\n    let query = localStorage.getItem('lastSearch') ?? '';\n    let selected: HTMLElement | undefined;\n    let pages: Page[] = [];\n    const inputElement = makeInputElement(search, (fn) => (selected ? fn(selected) : {}), select, query);\n\n    function select(el: HTMLElement): void {\n        if (selected) {\n            selected.classList.remove('active');\n        }\n        selected = el;\n        selected.classList.add('active');\n    }\n\n    function search(newQuery: string): void {\n        query = newQuery;\n        if (query.length === 1) {\n            return;\n        }\n        localStorage.setItem('lastSearch', query);\n        const results = pages\n            .map((page): PageWithMatches => [page, query === '' ? { matches: [], score: 1 } : page.matches(query)])\n            .filter(([, { score }]) => score > 0)\n            .sort(comparePagesWithMatches)\n            .map((item) => makeResultItemElement(navigation, item));\n        if (results.length > 0) {\n            replaceContent(listElement, fragmentOf(results));\n            select(results[0]);\n        } else {\n            const createOffer = makeFallbackResult(navigation, query);\n            replaceContent(listElement, createOffer);\n            select(createOffer);\n        }\n    }\n\n    function update(newPages: Page[]): void {\n        pages = newPages;\n        for (const page of pages) {\n            page.addChangeListener(() => {\n                search(query);\n            });\n        }\n        search(query);\n    }\n\n    window.addEventListener('keyup', (e) => {\n        if (e.key === 'f' && document.activeElement === document.body) {\n            inputElement.focus();\n            inputElement.select();\n            return;\n        }\n    });\n\n    if (initialPages) {\n        update(initialPages);\n    }\n\n    return {\n        el: htmlBuilder('div')\n            .addClass('sidebar')\n            .withChildren([\n                htmlBuilder('form')\n                    .withChildren([internalLinkBuilder(navigation, '/').innerHTML(Icons.home).build(), inputElement])\n                    .build(),\n                listElement,\n            ])\n            .build(),\n        update,\n    };\n}\n","export function dateToString(date: Date): string {\n    return (\n        date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).substr(-2) + '-' + ('0' + date.getDate()).substr(-2)\n    );\n}\n","import { htmlBuilder, internalLinkBuilder } from '../html';\nimport { Page } from '../Model/Page';\nimport Navigation from '../Navigation';\nimport { dateToString } from '../util';\nimport Icons from './Icons';\nimport { PageViewMode } from './PageView';\n\nexport interface PageHeaderProps {\n    navigation: Navigation;\n    setMode: (page: Page, mode: PageViewMode) => void;\n    deletePage: (page: Page) => void;\n}\n\nfunction PageTitle(navigation: Navigation, page: Page): HTMLElement {\n    if (page.isDate()) {\n        return htmlBuilder('h1')\n            .appendChild(internalLinkBuilder(navigation, page.getUri()).innerText(page.getTitle()).build())\n            .build();\n    } else {\n        return htmlBuilder('h1')\n            .appendChild(\n                htmlBuilder('input')\n                    .apply((el) => (el.value = page.getTitle()))\n                    .addEventListener('keydown', (ev, el) => {\n                        if ((ev.key === 's' && ev.ctrlKey) || ev.key === 'Enter') {\n                            ev.preventDefault();\n                            el.blur();\n                        }\n                    })\n                    .addEventListener('change', (_ev, el) => page.setTitle(el.value))\n                    .addEventListener('input', (_ev, el) => page.setTitle(el.value))\n                    .build(),\n            )\n            .build();\n    }\n}\n\nfunction DateNavigation(navigation: Navigation, page: Page): HTMLElement | undefined {\n    if (page.isDate()) {\n        const prevDate = new Date(page.getTitle());\n        prevDate.setDate(prevDate.getDate() - 1);\n        const nextDate = new Date(page.getTitle());\n        nextDate.setDate(nextDate.getDate() + 1);\n        return htmlBuilder('div')\n            .addClass('date-nav')\n            .withChildren([\n                internalLinkBuilder(navigation, dateToString(prevDate))\n                    .innerHTML(Icons.chevronLeft)\n                    .addClass('date-link')\n                    .build(),\n                internalLinkBuilder(navigation, dateToString(nextDate))\n                    .innerHTML(Icons.chevronRight)\n                    .addClass('date-link')\n                    .build(),\n            ])\n            .build();\n    }\n}\n\nfunction PageActions(props: PageHeaderProps, page: Page): HTMLElement {\n    let isOpen = false;\n    const container = htmlBuilder('div').addClass('page__actions').build();\n    const openButton = htmlBuilder('button')\n        .innerHTML(Icons.dotsVertical)\n        .addEventListener('click', () => {\n            if (isOpen) {\n                isOpen = false;\n                container.classList.remove('page__actions--open');\n            } else {\n                isOpen = true;\n                container.classList.add('page__actions--open');\n            }\n        })\n        .build();\n    const actionList = htmlBuilder('div')\n        .addClass('page__action-list')\n        .withChildren([\n            htmlBuilder('button')\n                .innerText('delete')\n                .addEventListener('click', () => {\n                    props.deletePage(page);\n                })\n                .build(),\n            htmlBuilder('button')\n                .innerText('edit raw')\n                .addEventListener('click', () => {\n                    container.classList.remove('page__actions--open');\n                    props.setMode(page, 'raw');\n                })\n                .build(),\n        ])\n        .build();\n\n    container.appendChild(openButton);\n    container.appendChild(actionList);\n\n    return container;\n}\n\nexport function PageHeader(props: PageHeaderProps, page: Page): HTMLElement {\n    return htmlBuilder('div')\n        .addClass('page__header')\n        .withChildren([\n            PageTitle(props.navigation, page),\n            DateNavigation(props.navigation, page),\n            PageActions(props, page),\n        ])\n        .build();\n}\n","import { htmlBuilder, fragmentOf, replaceContent, internalLinkBuilder } from '../html';\nimport { Page, InternalLink } from '../Model/Page';\nimport Markdown from '../Markdown';\nimport Navigation from '../Navigation';\nimport { PageHeader, PageHeaderProps } from './PageHeader';\nimport { Block } from '../Model/Block';\n\nexport interface BlockProps {\n    markdown: Markdown;\n    registerBlockElement: (block: Block, element: HTMLElement) => void;\n    onBlockClick: (block: Block, event: MouseEvent) => void;\n}\n\ninterface BacklinkProps {\n    markdown: Markdown;\n    navigation: Navigation;\n}\n\ntype BlockModeProps = PageHeaderProps & BlockProps & BacklinkProps;\n\ninterface RawModeProps {\n    setMode: (page: Page, mode: PageViewMode) => void;\n}\n\nexport type PageViewMode = 'raw' | 'block';\n\nexport interface PageViewState {\n    page: Page;\n    mode: PageViewMode;\n}\n\nexport interface PageViewProps {\n    navigation: Navigation;\n    markdown: Markdown;\n    registerBlockElement: (block: Block, element: HTMLElement) => void;\n    onBlockClick: (block: Block, event: MouseEvent) => void;\n    deletePage: (page: Page) => void;\n}\n\ninterface PageView {\n    rootElement: HTMLDivElement;\n    update: (newState: PageViewState) => void;\n}\n\nexport function makeBlock({ markdown, registerBlockElement, onBlockClick }: BlockProps, block: Block): HTMLElement {\n    return htmlBuilder('div')\n        .addClass('block', block.isEmpty() ? 'block--empty' : false)\n        .data('level', block.level.toString())\n        .innerHTML(markdown.render(block.content))\n        .apply((el) => registerBlockElement(block, el))\n        .addEventListener('click', (ev) => onBlockClick(block, ev))\n        .build();\n}\n\nfunction makeBacklink({ markdown, navigation }: BacklinkProps, link: InternalLink): DocumentFragment {\n    const pageBlock = htmlBuilder('div')\n        .addClass('block')\n        .data('level', '0')\n        .appendChild(internalLinkBuilder(navigation, link.from).innerText(link.linkText).build())\n        .build();\n\n    const blocks = link.block.parents();\n    const children = link.block.children();\n    if (children.length === 0) {\n        blocks.push(...(link.block.parent()?.children() ?? []));\n    } else {\n        blocks.push(link.block);\n        blocks.push(...children);\n    }\n    return fragmentOf([\n        pageBlock,\n        ...blocks.map((block) =>\n            htmlBuilder('div')\n                .addClass('block')\n                .data('level', (block.level + 1).toString())\n                .innerHTML(markdown.render(block.content))\n                .build(),\n        ),\n    ]);\n}\n\nfunction renderBlockMode(props: BlockModeProps, page: Page): DocumentFragment {\n    return fragmentOf([\n        PageHeader(props, page),\n        htmlBuilder('div')\n            .addClass('blocks')\n            .withChildren(page.blocksInOrder().map((block) => makeBlock(props, block)))\n            .build(),\n        htmlBuilder('h2').innerText('Backlinks').build(),\n        htmlBuilder('div')\n            .addClass('blocks', 'backlinks')\n            .withChildren(page.getBacklinks().flatMap((link) => makeBacklink(props, link)))\n            .build(),\n    ]);\n}\n\nfunction renderRawMode(props: RawModeProps, page: Page): DocumentFragment {\n    const textarea = htmlBuilder('textarea')\n        .addClass('raw-editor')\n        .innerHTML(page.toMarkdown())\n        .addEventListener('keydown', (ev, el) => {\n            if (ev.key === 's' && ev.ctrlKey) {\n                ev.preventDefault();\n                page.setMarkdown(el.value);\n                props.setMode(page, 'block');\n            }\n        })\n        .build();\n    return fragmentOf([\n        textarea,\n        htmlBuilder('div')\n            .addClass('buttons')\n            .withChildren([\n                htmlBuilder('button')\n                    .innerText('save')\n                    .addEventListener('click', () => {\n                        page.setMarkdown(textarea.value);\n                        props.setMode(page, 'block');\n                    })\n                    .build(),\n                htmlBuilder('button')\n                    .innerText('close')\n                    .addEventListener('click', () => {\n                        props.setMode(page, 'block');\n                    })\n                    .build(),\n            ])\n            .build(),\n    ]);\n}\n\nexport function PageView(props: PageViewProps, initialState?: PageViewState): PageView {\n    const rootElement = htmlBuilder('div').addClass('page').build();\n    let oldState: PageViewState | undefined;\n\n    const blockModeProps: BlockModeProps = {\n        ...props,\n        setMode: (page, mode) => update({ page, mode }),\n    };\n\n    function update(newState: PageViewState): void {\n        oldState = newState;\n        document.title = newState.page.getTitle();\n\n        if (newState.mode === 'raw') {\n            replaceContent(\n                rootElement,\n                renderRawMode({ setMode: (page, mode) => update({ page, mode }) }, newState.page),\n            );\n            rootElement.classList.add('page--raw');\n        } else {\n            replaceContent(rootElement, renderBlockMode(blockModeProps, newState.page));\n            rootElement.classList.remove('page--raw');\n        }\n\n        window.scrollTo(0, 0);\n    }\n\n    if (initialState) {\n        update(initialState);\n    }\n\n    return {\n        rootElement,\n        update,\n    };\n}\n","import { htmlBuilder, replaceContent } from '../html';\nimport Markdown from '../Markdown';\nimport { Block } from '../Model/Block';\nimport Upload from '../Upload';\nimport { PageList } from '../Model/Wiki';\n\ntype Position = number;\n\ntype CursorPosition = 'start' | 'between' | 'end';\n\nexport interface EditorProps {\n    markdown: Markdown;\n    upload: Upload;\n    pageList: PageList;\n    blockElementMap: Map<Block, HTMLElement>;\n    renderBlock: (block: Block) => HTMLElement;\n}\n\nexport interface Editor {\n    editor: HTMLTextAreaElement;\n    mirror: HTMLTextAreaElement;\n    isEditing: (block: Block) => boolean;\n    startEditing: (block: Block, position: Position) => void;\n    stopEditing: () => void;\n}\n\ninterface AutoComplete {\n    element: HTMLElement;\n    focus: () => void;\n}\nfunction makeAutoComplete(pageList: PageList, confirm: (uri: string) => void, onClose: () => void): AutoComplete {\n    let selectedElement: HTMLElement | undefined;\n    let valueOnKeydown = '';\n\n    const rootElement = htmlBuilder('div').addClass('autocomplete').build();\n    const listElement = htmlBuilder('ul').addClass('autocomplete__list').build();\n    const inputElement = htmlBuilder('input')\n        .addClass('autocomplete__input')\n        .addEventListener('keyup', (ev) => {\n            if (ev.key === 'Enter') {\n                confirm(selectedElement?.dataset.uri || '');\n                rootElement.parentElement?.removeChild(rootElement);\n                onClose();\n                return;\n            }\n            if (ev.key === 'Escape') {\n                // this.editor?.autocompleteCancel();\n                rootElement.parentElement?.removeChild(rootElement);\n                onClose();\n                return;\n            }\n            if (valueOnKeydown !== inputElement.value) {\n                const items: string[] = [];\n                for (const result of pageList.filterPagesByTitle(inputElement.value).slice(0, 20)) {\n                    items.push(\n                        `<li data-uri=\"${result.getUri()}\" class=\"autocomplete__item\">${result.getTitle()}</li>`,\n                    );\n                }\n                listElement.innerHTML = items.join('');\n                if (listElement.firstElementChild instanceof HTMLLIElement) {\n                    selectedElement = listElement.firstElementChild;\n                    selectedElement.classList.add('autocomplete__item--selected');\n                }\n            }\n        })\n        .addEventListener('keydown', (ev) => {\n            valueOnKeydown = inputElement.value;\n            if (ev.key === 'ArrowDown' && selectedElement?.nextElementSibling instanceof HTMLLIElement) {\n                ev.preventDefault();\n                selectedElement.classList.remove('autocomplete__item--selected');\n                selectedElement = selectedElement.nextElementSibling;\n                selectedElement.classList.add('autocomplete__item--selected');\n                return;\n            }\n            if (ev.key === 'ArrowUp' && selectedElement?.previousElementSibling instanceof HTMLLIElement) {\n                ev.preventDefault();\n                selectedElement.classList.remove('autocomplete__item--selected');\n                selectedElement = selectedElement.previousElementSibling;\n                selectedElement.classList.add('autocomplete__item--selected');\n                return;\n            }\n        })\n        .build();\n\n    rootElement.appendChild(inputElement);\n    rootElement.appendChild(listElement);\n    return {\n        element: rootElement,\n        focus: () => inputElement.focus(),\n    };\n}\n\nexport function Editor({ markdown, upload, blockElementMap, renderBlock, pageList }: EditorProps): Editor {\n    const editor = htmlBuilder('textarea')\n        .addClass('inline-editor')\n        .setAttribute('placeholder', 'No content')\n        .setAttribute('rows', '1')\n        .build();\n    const mirror = htmlBuilder('textarea')\n        .addClass('inline-editor', 'inline-editor--mirror')\n        .setAttribute('placeholder', 'No content')\n        .setAttribute('rows', '1')\n        .build();\n    let editing: [Block, HTMLElement] | undefined;\n\n    // https://stackoverflow.com/a/25621277\n    function autoResize(): void {\n        editor.style.height = 'auto';\n        editor.style.height = editor.scrollHeight + 'px';\n    }\n\n    function stopEditing(): void {\n        if (editing) {\n            const [block, element] = editing;\n            editing = undefined;\n            const editorValue = editor.value;\n            block.content = editorValue;\n            element.classList.remove('block--editing');\n            if (block.isEmpty()) {\n                element.classList.add('block--empty');\n            } else {\n                element.classList.remove('block--empty');\n            }\n            element.innerHTML = markdown.render(block.content);\n        }\n    }\n\n    function startEditing(block: Block, position: Position): void {\n        const element = blockElementMap.get(block);\n        if (element) {\n            stopEditing();\n            editing = [block, element];\n            element.classList.add('block--editing');\n            editor.value = block.content;\n            replaceContent(element, editor);\n            editor.setSelectionRange(position, position);\n            editor.focus();\n            autoResize();\n        }\n    }\n\n    function split(block: Block, ev: KeyboardEvent): void {\n        if (ev.shiftKey || ev.ctrlKey) {\n            return;\n        }\n        ev.preventDefault();\n        const before = editor.value.substring(0, editor.selectionStart);\n        const after = editor.value.substring(editor.selectionEnd);\n        editor.value = before;\n        stopEditing();\n        const newBlock = block.split(before, after);\n        const newElement = renderBlock(newBlock);\n        blockElementMap.set(newBlock, newElement);\n        const oldElement = blockElementMap.get(block);\n        if (oldElement) {\n            oldElement.insertAdjacentElement('afterend', newElement);\n        }\n        startEditing(newBlock, 0);\n    }\n\n    function cursorPosition(): CursorPosition {\n        if (editor.selectionStart === 0 && editor.selectionEnd === 0) {\n            return 'start';\n        }\n        if (editor.selectionStart === editor.value.length && editor.selectionEnd === editor.value.length) {\n            return 'end';\n        }\n        return 'between';\n    }\n\n    function mergeWithPrev(block: Block, ev: KeyboardEvent): void {\n        if ((cursorPosition() !== 'start' && editor.value.length > 0) || !block.prev) {\n            return;\n        }\n        ev.preventDefault();\n        stopEditing();\n        const prevBlock = block.prev;\n        const nextPosition = prevBlock.content.length;\n        const removedBlock = block.mergeWithPrev();\n        if (removedBlock) {\n            blockElementMap.get(removedBlock)?.remove();\n        }\n        const component = blockElementMap.get(prevBlock);\n        if (component) {\n            startEditing(prevBlock, nextPosition);\n        }\n    }\n\n    function mergeWithNext(block: Block, ev: KeyboardEvent): void {\n        if ((cursorPosition() !== 'end' && editor.value.length > 0) || !block.next) {\n            return;\n        }\n        ev.preventDefault();\n        stopEditing();\n        const nextPosition = block.content.length;\n        const removedBlock = block.mergeWithNext();\n        if (removedBlock) {\n            blockElementMap.get(removedBlock)?.remove();\n        }\n        startEditing(block, nextPosition);\n    }\n\n    function changeLevel(block: Block, element: HTMLElement, ev: KeyboardEvent): void {\n        if (!block.prev) {\n            return;\n        }\n        ev.preventDefault();\n        const newLevel = block.changeLevel(ev.shiftKey ? -1 : 1);\n        element.dataset.level = newLevel.toString();\n    }\n\n    function isInFirstLine(): boolean {\n        mirror.style.width = editor.clientWidth + 'px';\n        mirror.innerHTML = 'a';\n        const oneLineHeight = mirror.scrollHeight;\n        mirror.innerHTML = editor.value.substring(0, editor.selectionStart);\n        return mirror.scrollHeight === oneLineHeight;\n    }\n\n    function isInLastLine(): boolean {\n        mirror.style.width = editor.clientWidth + 'px';\n        mirror.innerHTML = editor.value;\n        const fullHeight = mirror.scrollHeight;\n        mirror.innerHTML = editor.value.substring(0, editor.selectionEnd);\n        return mirror.scrollHeight === fullHeight;\n    }\n\n    function navigate(block: Block, ev: KeyboardEvent): void {\n        if (ev.key === 'ArrowUp' && block.prev && isInFirstLine()) {\n            ev.preventDefault();\n            startEditing(block.prev, -1);\n        } else if (ev.key === 'ArrowDown' && block.next && isInLastLine()) {\n            ev.preventDefault();\n            startEditing(block.next, -1);\n        } else if (ev.key === 'ArrowLeft' && cursorPosition() === 'start' && block.prev) {\n            ev.preventDefault();\n            startEditing(block.prev, -1);\n        } else if (ev.key === 'ArrowRight' && cursorPosition() === 'end' && block.next) {\n            ev.preventDefault();\n            startEditing(block.next, 0);\n        }\n    }\n\n    editor.addEventListener('keydown', (ev) => {\n        if (!editing) {\n            return;\n        }\n        const [block, element] = editing;\n        if (ev.key === 'Enter' && !ev.shiftKey) {\n            ev.preventDefault();\n            split(editing[0], ev);\n        } else if (ev.key === 'Escape' || (ev.key === 's' && ev.ctrlKey)) {\n            ev.preventDefault();\n            stopEditing();\n        } else if (ev.key === 'Backspace') {\n            mergeWithPrev(block, ev);\n        } else if (ev.key === 'Delete') {\n            mergeWithNext(block, ev);\n        } else if (ev.key === 'Tab') {\n            changeLevel(block, element, ev);\n        } else if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(ev.key)) {\n            navigate(block, ev);\n        }\n    });\n\n    editor.addEventListener('input', () => {\n        autoResize();\n    });\n\n    editor.addEventListener('keyup', (ev) => {\n        if (ev.key === ']' && editor.value.substring(editor.selectionStart - 2, editor.selectionStart-1) === '[') {\n            const autoComplete = makeAutoComplete(\n                pageList,\n                (uri) => {\n                    editor.value = editor.value + ' [](./' + uri + ')';\n                },\n                () => editor.focus(),\n            );\n            editor.parentElement?.appendChild(autoComplete.element);\n            autoComplete.focus();\n        }\n    });\n\n    editor.addEventListener('paste', (ev: ClipboardEvent) => {\n        if (ev.clipboardData) {\n            upload.upload(ev.clipboardData, (uri) => {\n                editor.value = editor.value + '![](./' + uri + ')';\n            });\n        }\n    });\n\n    document.addEventListener('drop', (ev: DragEvent) => {\n        if (ev.type === 'drop' && ev.target === editor && ev.dataTransfer) {\n            ev.preventDefault();\n            upload.upload(ev.dataTransfer, (uri) => {\n                editor.value = editor.value + '![](./' + uri + ')';\n            });\n        }\n    });\n\n    document.addEventListener('click', (ev: MouseEvent) => {\n        if (ev.target instanceof HTMLElement && !ev.target.closest('.page')) {\n            stopEditing();\n        }\n    });\n\n    return {\n        editor,\n        mirror,\n        isEditing(block): boolean {\n            return editing ? editing[0] === block : false;\n        },\n        startEditing,\n        stopEditing,\n    };\n}\n","import './index.scss';\nimport { App } from './View/App';\nimport { Api } from './Api';\n\ndocument.getElementById('app')?.appendChild(App(new Api(window.localStorage.getItem('apiUri') ?? '')));\n\n// PWA\n\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/serviceWorker.js').then();\n    });\n}\n","import { Wiki } from '../Model/Wiki';\nimport { Page } from '../Model/Page';\nimport { Api } from '../Api';\nimport Markdown from '../Markdown';\nimport Navigation from '../Navigation';\nimport Upload from '../Upload';\nimport { Notifications } from './Notifications';\nimport { Sidebar } from './Sidebar';\nimport { fragmentOf, htmlBuilder, replaceContent } from '../html';\nimport { PageView, PageViewProps, makeBlock } from './PageView';\nimport { Editor } from './Editor';\nimport { Block } from '../Model/Block';\nimport { caretNodeAndOffset, caretPosition } from '../caret';\n\ninterface AdditionalPagesView {\n    rootElement: HTMLDivElement;\n    update: (pages: Page[]) => void;\n}\nexport function AdditionalPagesView(props: PageViewProps): AdditionalPagesView {\n    const rootElement = htmlBuilder('div').addClass('more-pages').build();\n    return {\n        rootElement,\n        update(pages): void {\n            replaceContent(\n                rootElement,\n                fragmentOf(pages.map((page) => PageView(props, { page, mode: 'block' }).rootElement)),\n            );\n        },\n    };\n}\n\n\nexport function App(api: Api): DocumentFragment {\n    const wiki = new Wiki();\n    const markdown = new Markdown(wiki);\n    const upload = new Upload(api);\n    const notifications = Notifications();\n    const navigation = new Navigation(wiki, showPage);\n    const blockElementMap = new Map<Block, HTMLElement>();\n    const editor = Editor({\n        upload,\n        markdown,\n        pageList: wiki.getPageList(),\n        blockElementMap,\n        renderBlock: (block: Block) => {\n            return makeBlock(\n                {\n                    markdown,\n                    registerBlockElement,\n                    onBlockClick,\n                },\n                block,\n            );\n        },\n    });\n    const pageViewProps: PageViewProps = {\n        markdown,\n        navigation,\n        deletePage,\n        registerBlockElement,\n        onBlockClick,\n    };\n    const pageView = PageView(pageViewProps);\n    const additionalPagesView = AdditionalPagesView(pageViewProps);\n    const sidebar = Sidebar(navigation, []);\n\n    function registerBlockElement(block: Block, element: HTMLElement): void {\n        blockElementMap.set(block, element);\n    }\n\n    function onBlockClick(block: Block, ev: MouseEvent): void {\n        if (ev.target instanceof HTMLAnchorElement || editor.isEditing(block)) {\n            return;\n        }\n        if (ev.target instanceof HTMLInputElement && ev.target.type === 'checkbox') {\n            block.setCheckbox(ev.target.checked);\n            return;\n        }\n        ev.preventDefault();\n        // needed for clicks on blockquotes\n        ev.stopPropagation();\n        const pos = caretNodeAndOffset(ev.clientX, ev.clientY);\n        let position = -1;\n        if (pos) {\n            position = caretPosition(pos[0], pos[1], block.content);\n        }\n        editor.startEditing(block, position);\n    }\n\n    function savePage(page: Page): void {\n        api.savePage(page)\n            .then((result) => {\n                if (result.success) {\n                    wiki.update(page);\n                    notifications.add('Success', 'success');\n                } else {\n                    notifications.add('Error 1', 'error');\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                notifications.add('Error 2', 'error');\n            });\n    }\n\n    function deletePage(page: Page): void {\n        if (!window.confirm('Do you really want to delete page \"' + page.getTitle() + '\"?')) {\n            return;\n        }\n        wiki.deletePage(page);\n        api.deletePage(page)\n            .then((result) => {\n                if (result.success) {\n                    notifications.add('Success', 'success');\n                } else {\n                    notifications.add('Error 1', 'error');\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                notifications.add('Error 2', 'error');\n            });\n        navigation.goToUri('/');\n    }\n\n    const pagesWithChangeListeners = new Set<Page>();\n    let currentPage: Page|undefined;\n    function showPage(page: Page): void {\n        currentPage = page;\n        pageView.update({ page, mode: 'block' });\n        if (!pagesWithChangeListeners.has(page)) {\n            pagesWithChangeListeners.add(page);\n            page.addChangeListener(() => savePage(page));\n        }\n        const uri = window.location.pathname.substring(1);\n        if (uri === '') {\n            const additionalPages = [];\n            const max = 7;\n            let current = page.prev(wiki);\n            while (current && additionalPages.length <= max) {\n                additionalPages.push(current);\n                current = current.prev(wiki);\n            }\n            additionalPagesView.update(additionalPages);\n        } else {\n            additionalPagesView.update([]);\n        }\n    }\n\n   \n    window.onpopstate = (e: PopStateEvent): void => {\n        showPage(wiki.getPage(e.state.uri));\n    };\n\n    document.addEventListener('keydown', (ev: KeyboardEvent): void => {\n        if (!currentPage) {\n            return;\n        }\n        if (ev.key === 'z' && ev.ctrlKey) {\n            ev.preventDefault();\n            currentPage.undo();\n            pageView.update({page: currentPage, mode: 'block'});\n        }\n        if (ev.key === 'Z' && ev.ctrlKey) {\n            ev.preventDefault();\n            currentPage.redo();\n            pageView.update({page: currentPage, mode: 'block'});\n        }\n    });\n\n    document.addEventListener('click', (e: MouseEvent) => {\n        if (e.target instanceof HTMLAnchorElement && e.target.classList.contains('internal') && !e.ctrlKey) {\n            const href = e.target.getAttribute('href');\n            if (href) {\n                e.preventDefault();\n                navigation.goToUri(href);\n            }\n        }\n    });\n\n    api.loadPages().then((pages) => {\n        for (const item of pages) {\n            wiki.addPage(item.uri, item.markdown);\n        }\n        const uri = window.location.pathname.substring(1);\n        const page = wiki.getPage(uri);\n        showPage(page);\n        sidebar.update(wiki.getPages());\n    });\n\n    wiki.onChange(() => sidebar.update(wiki.getPages()));\n\n    return fragmentOf([\n        sidebar.el,\n        htmlBuilder('main').withChildren([pageView.rootElement, additionalPagesView.rootElement]).build(),\n        notifications.el,\n        editor.mirror,\n    ]);\n}\n","import { htmlBuilder } from '../html';\n\ninterface Notifications {\n    el: HTMLElement;\n    add: (message: string, type: 'success' | 'error') => void;\n}\nexport function Notifications(): Notifications {\n    const el = htmlBuilder('div').addClass('notifications').build();\n    return {\n        el,\n        add(message: string, type: 'success' | 'error'): void {\n            const notification = htmlBuilder('div')\n                .addClass('notification', type === 'success' ? 'notification--success' : 'notification--error')\n                .innerText(message)\n                .build();\n            el.appendChild(notification);\n            setTimeout(() => el.removeChild(notification), 3000);\n        },\n    };\n}\n","export function caretNodeAndOffset(x: number, y: number): [Node, number] | undefined {\n    if (document.caretPositionFromPoint) {\n        const pos = document.caretPositionFromPoint(x, y);\n        if (pos) {\n            return [pos.offsetNode, pos.offset];\n        }\n    } else if (document.caretRangeFromPoint) {\n        const range = document.caretRangeFromPoint(x, y);\n        return [range.startContainer, range.startOffset];\n    }\n}\n\nexport function caretPosition(node: Node, offset: number, markdown: string): number {\n    const clickedText = node.textContent;\n\n    if (!clickedText || clickedText.length === 0) {\n        // If the block is empty, put the cursor at the beginning (= end, since it's empty) of the input.\n        return 0;\n    }\n\n    if (node.nextSibling === null && offset === clickedText.length) {\n        // This special case handles blocks which end with a link.\n        // Without the special handling, clicking at the end of a block that contains only a link would cause\n        // the cursor to be put right before the closing square bracket of the link in the markdown.\n        return markdown.length;\n    }\n\n    // Find all positions of the text node which received the click inside the markdown content of the block.\n    const positions = [];\n    let currentIndex = markdown.indexOf(clickedText, 0);\n    while (currentIndex >= 0) {\n        positions.push(currentIndex);\n        currentIndex = markdown.indexOf(clickedText, currentIndex + clickedText.length);\n    }\n    // If the text that received the click occurs only once in the block's markdown content, we can be sure that\n    // this one occurrence is the one the user clicked on. So we put the cursor inside that text.\n    if (positions.length === 1) {\n        return positions[0] + offset;\n    } else {\n        // If the clicked text appears more than once in the markdown content, we have to determine which of those\n        // occurrences received the click. We do this by building a list of text segments that we expect to see\n        // in the markdown before the clicked text.\n        const before: string[] = [];\n        let prev = node.previousSibling;\n        while (prev) {\n            // We have to expect the href of a link because it could contain the text that received the click.\n            // TODO: This is is also necessary for other elements which contain more text in their markdown\n            // representation than is returned by textContent, like images.\n            if (prev instanceof HTMLAnchorElement) {\n                before.push(prev.getAttribute('href') || '');\n            }\n            before.push(prev.textContent || '');\n            prev = prev.previousSibling;\n        }\n        // Now that we have a list of text segments that we expect to see before the clicked text, we determine\n        // the minimum offset that the markdown text corresponding to the clicked text must have.\n        let minOffset = 0;\n        for (const cur of before) {\n            minOffset = markdown.indexOf(cur, minOffset) + cur.length;\n        }\n        // We return the first position which is after all of the text segments that we expect before.\n        for (const position of positions) {\n            if (position >= minOffset) {\n                return position + offset;\n            }\n        }\n        // The above loop should always return a value, but we fall back to putting cursor at the end of the input.\n        return markdown.length;\n    }\n}\n","import { Page } from './Model/Page';\n\ninterface ApiPage {\n    uri: string;\n    markdown: string;\n}\ntype ApiPages = ApiPage[];\n\ntype UploadedFile = { filename: string };\ntype SaveResult = { success: boolean };\ntype DeleteResult = { success: boolean };\n\nexport class Api {\n    private readonly uri: string;\n    constructor(uri: string) {\n        this.uri = uri;\n    }\n\n    loadPages(): Promise<ApiPages> {\n        return fetch(this.uri + '/pages')\n            .then((r) => r.json())\n            .then((json: { data: ApiPages }) => json.data);\n    }\n\n    savePage(page: Page): Promise<SaveResult> {\n        return fetch(this.uri + '/pages/' + page.getUri(), {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                uri: page.getUri(),\n                markdown: page.toMarkdown(),\n            }),\n        })\n            .then((res) => res.json())\n            .then((json: SaveResult) => json);\n    }\n\n    deletePage(page: Page): Promise<DeleteResult> {\n        return fetch(this.uri + '/pages/' + page.getUri(), {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((res) => res.json())\n            .then((json: DeleteResult) => json);\n    }\n\n    uploadFile(file: File): Promise<UploadedFile> {\n        const formData = new FormData();\n        formData.append('file', file);\n        return fetch(this.uri + '/files', {\n            method: 'POST',\n            body: formData,\n        })\n            .then((res: Response) => res.json())\n            .then((json: { data: UploadedFile }) => json.data);\n    }\n}\n"],"sourceRoot":""}